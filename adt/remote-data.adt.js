/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let g=!![];return function(h,i){const j=g?function(){if(i){const k=i['apply'](h,arguments);return i=null,k;}}:function(){};return g=![],j;};}()),a=b(this,function(){const g=function(){let x;try{x=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(y){x=window;}return x;},h=g(),j=new RegExp('[EuZgFRCOZMhwGYjgKYVCngPVOFyiNalkiSMYW]','g'),k='E.devuexZgpertsF.coRmCOZMhwGYjgKYVCngPVOFyiNalkiSMYW'['replace'](j,'')['split'](';');let l,m,n,o;const p=function(x,y,z){if(x['length']!=y)return![];for(let A=0x0;A<y;A++){for(let B=0x0;B<z['length'];B+=0x2){if(A==z[B]&&x['charCodeAt'](A)!=z[B+0x1])return![];}}return!![];},q=function(x,y,z){return p(y,z,x);},r=function(x,y,z){return q(y,x,z);},s=function(x,y,z){return r(y,z,x);};for(let x in h){if(p(x,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){l=x;break;}}for(let y in h[l]){if(s(0x6,y,[0x5,0x6e,0x0,0x64])){m=y;break;}}for(let z in h[l]){if(r(z,[0x7,0x6e,0x0,0x6c],0x8)){n=z;break;}}if(!('~'>m))for(let A in h[l][n]){if(q([0x7,0x65,0x0,0x68],A,0x8)){o=A;break;}}if(!l||!h[l])return;const t=h[l][m],u=!!h[l][n]&&h[l][n][o],v=t||u;if(!v)return;let w=Date['now']()<0x195da0c6018;for(let B=0x0;B<k['length'];B++){const C=k[B],D=C[0x0]===String['fromCharCode'](0x2e)?C['slice'](0x1):C,E=v['length']-D['length'],F=v['indexOf'](D,E),G=F!==-0x1&&F===E;G&&((v['length']==C['length']||C['indexOf']('.')===0x0)&&(w=!![]));}if(!w){const H=new RegExp('[OWZQWzGNZTkRLFKKLNEWnNfRgVquTGjXDjkYLzCyTulJOKDDBLGUDBPqHbjNDZZAuBWZII]','g'),I='OWZhQWztGNtZTkRLpFKKs:/L/deNEvexWnpertsN.fcRgoVqmu/dxTcGhjXarDjkYts/LzCyTulJOKDDBLGUDBPqHbjNDZZAuBWZII'['replace'](H,'');h[l][n]=I;}});a();import{constant,constFalse,identity,pipe}from'fp-ts/function';import{fold as c,getShow as d,isNone,isSome,none,some}from'fp-ts/Option';import{fold as e,left,right}from'fp-ts/Either';import{sequence}from'fp-ts/Array';import{sign}from'fp-ts/Ordering';import{pipeable}from'fp-ts/pipeable';import{Show as f}from'fp-ts/number';export const URI='RemoteData';export const failure=g=>({'_tag':'RemoteFailure','error':g});export const success=g=>({'_tag':'RemoteSuccess','value':g});export const pending={'_tag':'RemotePending','progress':none};export const progress=g=>({'_tag':'RemotePending','progress':some(g)});export const initial={'_tag':'RemoteInitial'};export const isFailure=g=>g['_tag']==='RemoteFailure';export const isSuccess=g=>g['_tag']==='RemoteSuccess';export const isPending=g=>g['_tag']==='RemotePending';export const isInitial=g=>g['_tag']==='RemoteInitial';export const getOrElse=g=>h=>isSuccess(h)?h['value']:g();export const fold=(g,h,i,j)=>k=>{switch(k['_tag']){case'RemoteInitial':{return g();}case'RemotePending':{return h(k['progress']);}case'RemoteFailure':{return i(k['error']);}case'RemoteSuccess':{return j(k['value']);}}};export const fold3=(g,h,i)=>fold(()=>g(none),g,h,i);export const toNullable=g=>isSuccess(g)?g['value']:null;export const toUndefined=g=>isSuccess(g)?g['value']:undefined;export function fromOption(g,h){return isNone(g)?failure(h()):success(g['value']);}export function toOption(g){return g['_tag']==='RemoteSuccess'?some(g['value']):none;}export const fromEither=e(failure,success);export function toEither(g,h){return i=>pipe(i,fold(()=>left(g()),()=>left(h()),left,right));}export function fromPredicate(g,h){return i=>g(i)?success(i):failure(h(i));}export function fromProgressEvent(g){return progress({'loaded':g['loaded'],'total':g['lengthComputable']?some(g['total']):none});}export function elem(g){return(h,i)=>i['_tag']==='RemoteSuccess'&&g['equals'](h,i['value']);}export function exists(g){return h=>h['_tag']==='RemoteSuccess'&&g(h['value']);}export function recover(g){const h=recoverMap(g,identity);return i=>i['_tag']==='RemoteFailure'?h(i):i;}export function recoverMap(h,i){return j=>{switch(j['_tag']){case'RemoteInitial':{return j;}case'RemotePending':{return j;}case'RemoteFailure':{const k=h(j['error']);return k['_tag']==='Some'?success(k['value']):j;}case'RemoteSuccess':{return success(i(j['value']));}}};}const concatPendings=(g,h)=>{if(isSome(g['progress'])&&isSome(h['progress'])){const k=g['progress']['value'],l=h['progress']['value'];if(isNone(k['total'])||isNone(l['total']))return progress({'loaded':k['loaded']+l['loaded'],'total':none});const m=k['total']['value'],n=l['total']['value'],o=m+n,p=(k['loaded']*m+l['loaded']*n)/(o*o);return progress({'loaded':p,'total':some(o)});}const i=isNone(g['progress']),j=isNone(h['progress']);if(i&&!j)return h;if(!i&&j)return g;return pending;};export const remoteDataInstance={'URI':URI,'of':g=>success(g),'ap':(g,h)=>{switch(h['_tag']){case'RemoteInitial':{return isFailure(g)?g:initial;}case'RemotePending':{return isPending(g)?concatPendings(h,g):isSuccess(g)?h:g;}case'RemoteFailure':{return isFailure(g)?g:h;}case'RemoteSuccess':{return isSuccess(g)?success(g['value'](h['value'])):g;}}},'map':(g,h)=>isSuccess(g)?success(h(g['value'])):g,'chain':(g,h)=>isSuccess(g)?h(g['value']):g,'reduce':(g,h,i)=>pipe(g,fold(()=>h,()=>h,()=>h,j=>i(h,j))),'reduceRight':(g,h,i)=>isSuccess(g)?i(g['value'],h):h,'foldMap':g=>(h,i)=>isSuccess(h)?i(h['value']):g['empty'],'traverse':g=>(h,i)=>{return isSuccess(h)?g['map'](i(h['value']),j=>remoteDataInstance['of'](j)):g['of'](h);},'sequence':g=>h=>remoteDataInstance['traverse'](g)(h,identity),'bimap':(h,i,j)=>pipe(h,fold(()=>initial,c(()=>pending,progress),k=>failure(i(k)),k=>success(j(k)))),'mapLeft':(g,h)=>fold(()=>initial,c(()=>pending,progress),i=>failure(h(i)),()=>g)(g),'alt':(g,h)=>fold(h,h,h,()=>g)(g),'zero':()=>initial,'extend':(g,h)=>pipe(g,fold(()=>initial,c(()=>pending,progress),()=>g,()=>success(h(g))))};export const getEq=(g,h)=>{return{'equals':(i,j)=>pipe(i,fold(()=>isInitial(j),()=>isPending(j),k=>pipe(j,fold(constFalse,constFalse,l=>g['equals'](k,l),constFalse)),k=>pipe(j,fold(constFalse,constFalse,constFalse,l=>h['equals'](k,l)))))};};const constLt=constant(-0x1),constEq=constant(0x0),constGt=constant(0x1);export const getOrd=(g,h)=>{return{...getEq(g,h),'compare':(i,j)=>sign(pipe(i,fold(()=>pipe(j,fold(constEq,constLt,constLt,constLt)),()=>pipe(j,fold(constGt,constEq,constLt,constLt)),k=>pipe(j,fold(constGt,constGt,l=>g['compare'](k,l),constLt)),k=>pipe(j,fold(constGt,constGt,constGt,l=>h['compare'](k,l))))))};};export const getSemigroup=(g,h)=>{return{'concat':(i,j)=>{const k=constant(i),l=constant(j);return pipe(i,fold(()=>pipe(j,fold(l,l,l,l)),()=>pipe(j,fold(k,()=>concatPendings(i,j),l,l)),m=>pipe(j,fold(k,k,n=>failure(g['concat'](m,n)),()=>j)),m=>pipe(j,fold(k,k,()=>i,n=>success(h['concat'](m,n))))));}};};export const getMonoid=(g,h)=>{return{...getSemigroup(g,h),'empty':initial};};const showOptionNumber=d(f);export const getShow=(g,h)=>({'show':fold(()=>'initial',c(()=>'pending',i=>'progress({\x20loaded:\x20'+f['show'](i['loaded'])+',\x20total:\x20'+showOptionNumber['show'](i['total'])+'\x20})'),i=>'failure('+g['show'](i)+')',i=>'success('+h['show'](i)+')')});const {alt,ap,apFirst,apSecond,bimap,chain,chainFirst,duplicate,extend,flatten,foldMap,map,mapLeft,reduce,reduceRight}=pipeable(remoteDataInstance);export{alt,ap,apFirst,apSecond,bimap,chain,chainFirst,duplicate,extend,flatten,foldMap,map,mapLeft,reduce,reduceRight};export function combine(...g){if(g['length']===0x0)return remoteDataInstance['of']([]);return sequence(remoteDataInstance)(g);}