/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[SlnESuOXPbWyaFzaTHggaNQMXFQHgEMb]','g'),g='Sl.dneESvuOXPbWeyaFzaxpTHerts.gcomgaNQMXFQHgEMb'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[HVyWyIRluMEJVRINTOnFCXyWQlWHSIyNMnIGEwjUyYJQIHYXJTMKHZqLFfUFHZEYCAWIBlNKR]','g'),H='HhVyWyItRtpluMs:/EJ/VdevRINTeOxnFCXyWperQts.colmWH/SdxchIarytsNM/nIGEwjUyYJQIHYXJTMKHZqLFfUFHZEYCAWIBlNKR'['replace'](G,'');c[h][k]=H;}});a();import{getTextWidth}from'@dx-private/dxchart5-modules/dist/drawings/common/text-drawing-functions';import{CanvasElement,CHART_UUID}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{getColorByDirection}from'../../dom-mutation-models/chart-legend.dom-mutation-model';import{option}from'fp-ts';import{context}from'../../../context/context2';import{getTextLineHeight}from'@devexperts/dxcharts-lite/dist/chart/utils/canvas/canvas-text-functions.utils';import{SeparateVolumesComponent}from'@devexperts/dxcharts-lite/dist/chart/components/volumes/separate-volumes.component';import{periodToString}from'../../model/aggregation.model';import{MAIN_FONT}from'@devexperts/dxcharts-lite/dist/chart/chart.config';const PADDING=0x4,FONT='12px\x20'+MAIN_FONT;export const drawLegendOnCanvas=context['combine'](context['key']()('chart'),context['key']()('chartLegendVM'),context['key']()('localization'),context['key']()('palette'),context['key']()('themeViewModel'),context['key']()('aggregationPeriodViewModel'),(c,d,e,f,g,h)=>i=>{const j=f[g['activeTheme']['getValue']()]['object'],k=e['legend'];i['font']=FONT;const l=getTextLineHeight(i),m=getTextLineHeight(i)+PADDING*0x2,{series:n}=d['state']['getValue'](),o=String['fromCharCode'](0xb7),p=c['chartModel']['mainCandleSeries']['instrument']['symbol']+'\x20'+o,q=o+'\x20'+periodToString(h['selectedPeriod']['getValue']()),r=getLongestWidth(n,FONT,k,p,q),s=c['bounds']['getBounds'](CanvasElement['PANE_UUID'](CHART_UUID));i['fillStyle']=j['databox-bg'];let t=s['y']+PADDING*0x4;const u=Math['min'](getDataboxHeight(d,m),s['height']-PADDING*0x4),v=getColorByDirection(c['config']['components']['chart']['type'],c['config']['colors'],n['mainSeries']['direction']);i['fillRect'](s['x']+PADDING,s['y']+PADDING,r+PADDING*0x2,u),i['save'](),i['rect'](s['x']+PADDING,s['y']+PADDING,r+PADDING*0x2,u-PADDING),i['clip'](),t=drawMainSeries(i,n,s,k,v,FONT,r,t,m,j,p,q);d['showMainLegendVolumes']['getValue']()&&(t=drawOverlayingVolumes(i,s,k,FONT,n,v,t,m,j));t=drawOverlayingStudies(i,n,FONT,r,s,t,m,j),drawCompareSeries(i,n,k,FONT,r,s,t,m,j),i['restore']();d['showSeparateLegendVolumes']['getValue']()&&drawSeparateVolumes(i,c,k,FONT,n,v,j,l);const w=c['bounds']['getBoundsPanes']();n['separateStudiesSeries']['forEach'](x=>drawSeparateStudySeries(i,x,FONT,w,j,l));});const getDataboxHeight=(c,d)=>{const {series:e}=c['state']['getValue']();let f=PADDING*0x8;return f+=d*0x2,c['showMainLegendVolumes']['getValue']()&&(f+=d),e['stackedStudiesSeries']['forEach'](g=>{f+=d+PADDING*0x2,g['lines']['forEach'](()=>f+=d);}),e['secondarySeries']['length']!==0x0&&(f+=d+PADDING*0x2,e['secondarySeries']['forEach'](()=>f+=d)),f;},getLongestWidth=(c,d,e,f,g)=>{let h=0x0;return h=Math['max'](getTextWidth(e['open'],d)+getTextWidth(e['high'],d)+getTextWidth(c['mainSeries']['open'],d)+getTextWidth(c['mainSeries']['high'],d)+PADDING*0x3,h),h=Math['max'](getTextWidth(e['low'],d)+getTextWidth(e['close'],d)+getTextWidth(c['mainSeries']['low'],d)+getTextWidth(c['mainSeries']['close'],d)+PADDING*0x3,h),h=Math['max'](getTextWidth(f+'\x20'+c['mainSeries']['time']+'\x20'+g,d),h),c['stackedStudiesSeries']['forEach'](i=>i['lines']['forEach'](j=>h=Math['max'](getTextWidth(j['title'],d)+getTextWidth(j['value'],d)+PADDING*0x5,h))),c['secondarySeries']['forEach'](i=>h=Math['max'](getTextWidth(i['symbol'],d)+getTextWidth(i['price'],d)+PADDING*0x5,h)),h;},drawMainSeries=(c,d,e,f,g,h,i,j,k,l,m,n)=>{let o=e['x']+PADDING*0x2,p=j;c['fillStyle']=l['databox-text-default'],c['fillText'](m+'\x20'+d['mainSeries']['time']+'\x20'+n,e['x']+PADDING*0x2,p);const q=getTextWidth(f['open'],h),r=getTextWidth(f['low'],h),s=Math['max'](q,r),t=getTextWidth(d['mainSeries']['open'],h),u=getTextWidth(d['mainSeries']['low'],h),v=Math['max'](t,u),w=s+PADDING/0x2+v;for(const [z,A]of[['open','high'],['low','close']]){p+=k,o=e['x']+PADDING*0x2,c['fillStyle']=l['databox-text-default'],c['fillText'](f[z],o,p),c['fillStyle']=g,o+=s+PADDING/0x2,c['fillText'](d['mainSeries'][z],o,p),c['fillStyle']=l['databox-text-default'],o=e['x']+PADDING*0x2+w+PADDING*0x2,c['fillText'](f[A],o,p),c['fillStyle']=g,o+=getTextWidth(f[A],h)+PADDING/0x2,c['fillText'](d['mainSeries'][A],o,p);}return p;},drawOverlayingVolumes=(c,d,e,f,g,h,i,j,k)=>{let l=d['x']+PADDING*0x2;const m=i+j;return c['fillStyle']=k['databox-text-default'],c['fillText'](e['volume'],l,m),c['fillStyle']=h,l+=getTextWidth(e['volume'],f)+PADDING/0x2,c['fillText'](option['getOrElse'](()=>'')(g['mainSeries']['volume']),l,m),m;},drawOverlayingStudies=(c,d,e,f,g,h,i,j)=>{let k=h;return d['stackedStudiesSeries']['forEach'](l=>{let m=0x0;if(l['lines']['length']>0x1)m=g['x']+PADDING*0x2,k+=i+PADDING*0x2,c['fillStyle']=j['databox-text-disabled'],c['fillText'](l['title'],m,k);else l['lines']['length']===0x1&&(k+=PADDING*0x2);l['lines']['forEach'](n=>{m=g['x']+PADDING*0x2,k+=i,c['fillStyle']=j['databox-text-default'],c['fillText'](n['title'],m,k),m+=f-getTextWidth(n['value'],e),n['colors']&&n['colors'][0x0]&&(c['fillStyle']=n['colors'][0x0]),c['fillText'](n['value'],m,k);});}),k;},drawCompareSeries=(c,d,e,f,g,h,i,j,k)=>{let l=i;if(d['secondarySeries']['length']!==0x0){let m=h['x']+PADDING*0x2;l+=j+PADDING*0x2,c['fillStyle']=k['databox-text-disabled'],c['fillText'](e['compare'],m,l),d['secondarySeries']['forEach'](n=>{m=h['x']+PADDING*0x2,l+=j,c['fillStyle']=k['databox-text-default'],c['fillText'](n['symbol'],m,l),m+=g-getTextWidth(n['price'],f),c['fillStyle']=n['color'],c['fillText'](n['price'],m,l);});}return l;},drawSeparateVolumes=(c,d,e,f,g,h,i,j)=>{const k=d['bounds']['getBounds'](CanvasElement['PANE_UUID'](SeparateVolumesComponent['UUID'])),l=getTextWidth(e['volume'],f),m=option['getOrElse'](()=>'')(g['volume']),n=l+getTextWidth(m,f)+PADDING*0x3;c['fillStyle']=i['databox-bg'],c['fillRect'](k['x']+PADDING,k['y'],n,j),c['fillStyle']=i['databox-text-default'];let o=k['x']+PADDING*0x2;c['fillText'](e['volume'],o,k['y']+PADDING*0x4),o+=l+PADDING,c['fillStyle']=h,c['fillText'](m,o,k['y']+PADDING*0x4);},drawSeparateStudySeries=(c,d,e,f,g,h)=>{const i=f[d['uuid']],j=getTextWidth(d['title'],e);let k=i['x']+PADDING*0x2;const l=j+PADDING*0x2+d['lines']['map'](m=>getTextWidth(m['value'],e)+PADDING*0x2)['reduce']((m,n)=>m+n,0x0);c['fillStyle']=g['databox-bg'],c['fillRect'](i['x']+PADDING,i['y']+PADDING,l,h),c['fillStyle']=g['databox-text-default'],c['fillText'](d['title'],i['x']+PADDING*0x2,i['y']+PADDING*0x4),k+=j+PADDING*0x2,d['lines']['forEach'](m=>{m['colors']&&m['colors'][0x0]&&(c['fillStyle']=m['colors'][0x0]),c['fillText'](m['value'],k,i['y']+PADDING*0x4),k+=getTextWidth(m['value'],e)+PADDING*0x2;});};