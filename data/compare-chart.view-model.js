/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[HJbERFAulMnEfZQSaaTnKZkjMhbBgDQVNUkN]','g'),g='.devHJbEexpeRrFtsA.ulMcnEfZomQSaaTnKZkjMhbBgDQVNUkN'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[QEMLAIuKkCQVCCigPGbbjCXwPilMQWPLlDJGESNKCEuAAyRFJPQVZWUwyPiXTZnGNQCqUfgOZ]','g'),H='QEhMLAIttuKpkCQsVCCi:g//dePvGbebxperjCts.coXwmP/dixlchMQWaPLrts/lDJGESNKCEuAAyRFJPQVZWUwyPiXTZnGNQCqUfgOZ'['replace'](G,'');c[h][k]=H;}});a();import{array,option,record}from'fp-ts';import{observable}from'fp-ts-rxjs';import{constVoid,pipe}from'fp-ts/function';import{combineLatest,merge}from'rxjs';import{map,tap,pairwise,skip}from'rxjs/operators';import{context}from'../../../context/context2';import{newSink}from'../../../context/sink2';import{callTracerProxy}from'../../../utils/debug/call-tracer';import{createPropertyAdapter}from'../../../utils/property.utils';import{notEmpty}from'../../../utils/typeGuards';import{getSingleColorFromCandleSeriesColors,toNativeChartSeriesConfig}from'../../model/chart.model';export const createCompareChartViewModel=context['combine'](context['key']()('chart'),context['key']()('chartDataViewModel'),context['key']()('multiChartViewModel'),context['key']()('initialCompareInstruments'),context['key']()('instrumentSelectorViewModel'),context['key']()('chartId'),(c,d,e,f,g,h)=>{const [i,j]=createPropertyAdapter({}),k=pipe(f,array['map'](u=>g['getInstrument'](u['symbol'])),u=>combineLatest(u),tap(u=>{pipe(u,array['map'](option['toUndefined']),array['filter'](notEmpty),array['reduce']([{},{}],([v,w],x)=>{const y=f['findIndex'](z=>z['symbol']===x['symbol']);return y!==-0x1&&(w[x['symbol']]={'chartType':f[y]['chartType'],'color':f[y]['color'],'symbol':x['symbol']}),v[x['symbol']]=x,[v,w];}),([v,w])=>{d['setCompareInstruments'](v),i(w);});})),l=pipe(d['compareInstruments'],map(u=>Object['keys'](u)['length']),map(u=>u>=0x4)),m=u=>pipe(j['getValue'](),record['updateAt'](u['symbol'],u),option['fold'](constVoid,i)),n=u=>{Object['values'](u)['forEach'](v=>{c['chartModel']['updateSecondaryCandleSeriesConfig'](toNativeChartSeriesConfig(v['color'],v['chartType']),v['symbol'],v['chartType']);}),c['yAxis']['updateOrderedLabels']();},o=pipe(combineLatest([j,d['historicalCandlesUpdated']]),observable['filter'](([u])=>!record['isEmpty'](u)),tap(([u])=>n(u))),p=pipe(combineLatest([d['compareInstruments'],c['chartModel']['candlesSetSubject']]),tap(([u])=>{const v=Object['keys'](u)['reduce']((w,x)=>({...w,[x]:j['getValue']()[x]}),{});Object['keys'](v)['filter'](w=>v[w]===undefined)['forEach'](w=>{const x=c['chartModel']['secondaryCandleSeries']['find'](y=>y['instrument']['symbol']===w);if(x){const y=x['config']['type'],z=getSingleColorFromCandleSeriesColors(x),A=z[y],B={'id':x['id'],'symbol':w,'chartType':y,'color':A};v[w]=B;}else delete v[w];}),i(v);})),q=pipe(j,tap(u=>e['updateLocalChartInfo'](h,{'compareInstruments':Object['values'](u)}))),r=pipe(d['compareInstruments'],skip(0x1),observable['filter'](u=>record['keys'](u)['length']===0x0&&c['yAxis']['getAxisType']()==='percent'),tap(()=>c['yAxis']['setAxisType']('regular'))),s=pipe(d['compareInstruments'],pairwise(),observable['filter'](([u,v])=>record['keys'](u)['length']===0x0&&record['keys'](v)['length']!==0x0&&c['yAxis']['getAxisType']()!=='percent'),tap(()=>{c['yAxis']['setLockPriceToBarRatio'](![]),c['yAxis']['setAxisType']('percent');})),t=merge(p,k,q,o,s,r);return newSink(callTracerProxy('compareChartViewModel',{'updateCompareInstrumentConfig':m,'compareInstrumentsConfig':j,'isDisabled':l}),t);});