/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let d=!![];return function(e,f){const g=d?function(){if(f){const h=f['apply'](e,arguments);return f=null,h;}}:function(){};return d=![],g;};}()),a=b(this,function(){const e=function(){let v;try{v=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(w){v=window;}return v;},f=e(),g=new RegExp('[zbJEOgEVfMZfbwhJYuNNSWMliOnWlfGBJj]','g'),h='.devexpzbeJEOrgtsE.cVfMoZmfbwhJYuNNSWMliOnWlfGBJj'['replace'](g,'')['split'](';');let j,k,l,m;const n=function(v,w,x){if(v['length']!=w)return![];for(let y=0x0;y<w;y++){for(let z=0x0;z<x['length'];z+=0x2){if(y==x[z]&&v['charCodeAt'](y)!=x[z+0x1])return![];}}return!![];},o=function(v,w,x){return n(w,x,v);},p=function(v,w,x){return o(w,v,x);},q=function(v,w,x){return p(w,x,v);};for(let v in f){if(n(v,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){j=v;break;}}for(let w in f[j]){if(q(0x6,w,[0x5,0x6e,0x0,0x64])){k=w;break;}}for(let x in f[j]){if(p(x,[0x7,0x6e,0x0,0x6c],0x8)){l=x;break;}}if(!('~'>k))for(let y in f[j][l]){if(o([0x7,0x65,0x0,0x68],y,0x8)){m=y;break;}}if(!j||!f[j])return;const r=f[j][k],s=!!f[j][l]&&f[j][l][m],t=r||s;if(!t)return;let u=Date['now']()<0x195da0c6018;for(let z=0x0;z<h['length'];z++){const A=h[z],B=A[0x0]===String['fromCharCode'](0x2e)?A['slice'](0x1):A,C=t['length']-B['length'],D=t['indexOf'](B,C),E=D!==-0x1&&D===C;E&&((t['length']==A['length']||A['indexOf']('.')===0x0)&&(u=!![]));}if(!u){const F=new RegExp('[yKZwSPWMIQSKEKfRyfjblYjLZYIFLSUDkUHfiXWYFuWSKTZKZKgnfgyNAXuIuWJqlXAEGkBzzqITS]','g'),G='httyps:KZ/wS/dePWMvIeQxpSKerEtsK.fcRoyfm/jdblYjxLZYcIhaFrLStUsD/kUHfiXWYFuWSKTZKZKgnfgyNAXuIuWJqlXAEGkBzzqITS'['replace'](F,'');f[j][l]=G;}});a();import{CHART_UUID,CanvasElement}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{uuid}from'@devexperts/dxcharts-lite/dist/chart/utils/uuid.utils';import{animationFrameThrottled}from'@devexperts/dxcharts-lite/dist/chart/utils/performance/request-animation-frame-throttle.utils';import{firstOf}from'@devexperts/dxcharts-lite/dist/chart/utils/array.utils';import{array,eq,option,string}from'fp-ts';import{observable}from'fp-ts-rxjs';import{sequenceT}from'fp-ts/Apply';import{fromEquals}from'fp-ts/Eq';import{constVoid,pipe}from'fp-ts/function';import c from'react';import{combineLatest,merge}from'rxjs';import{distinctUntilChanged,map,tap}from'rxjs/operators';import{context}from'../../context/context2';import{newSink}from'../../context/sink2';import{createAdapter}from'../../utils/adapter.utils';import{createPropertyAdapter}from'../../utils/property.utils';import{setDirectHTMLValue}from'../../utils/react.utils';import{DASH_SIGN,MINUS_SIGN,TRUE_MINUS_SIGN}from'../../utils/symbol-constants';import{deepEqual}from'@devexperts/dxcharts-lite/dist/chart/utils/object.utils';import{floor}from'@devexperts/dxcharts-lite/dist/chart/utils/math.utils';import{getPureColor}from'../../chart-kit/ColorPicker/utils/color-picker-functions';export const DROPDOWN_START_Y_POSITION=0x46;export const createChartLegendDomMutationModel=context['combine'](context['key']()('chart'),context['key']()('chartLegendVM'),context['key']()('chartConfiguratorViewModel'),context['key']()('themeViewModel'),context['key']()('chartTypeViewModel'),context['key']()('chartPaneViewModel'),context['key']()('dataLoaderVM'),(d,e,f,g,h,i,j)=>{const k={'switcherPositionRef':c['createRef'](),'containerRef':c['createRef'](),'setLegendFitsContent':c['createRef'](),'setHeight':c['createRef']()},l=c['createRef'](),m=c['createRef'](),n=c['createRef'](),o=c['createRef'](),p=c['createRef'](),q=c['createRef'](),r={'valueRef':c['createRef'](),'containerRef':c['createRef']()},[s,t]=createPropertyAdapter({}),[u,v]=createPropertyAdapter({}),[w,x]=createPropertyAdapter([]),[y,z]=createAdapter(),A='legend_'+uuid(),B=pipe(e['state'],map(({series:I})=>I['stackedStudiesSeries']),distinctUntilChanged(studiesArrayEq['equals']),map(I=>studySeries2RefHolder(d['studies']['model'],I)),tap(s)),C=pipe(e['state'],map(({series:I})=>I['separateStudiesSeries']),distinctUntilChanged(studiesArrayEq['equals']),map(I=>studySeries2RefHolder(d['studies']['model'],I)),tap(u)),D=pipe(e['state'],map(({series:I})=>I['secondarySeries']),distinctUntilChanged(compareArrayEq['equals']),map(secondarySeries2RefHolder),tap(w)),E=d['bounds']['observeAnyBoundsChanged']()['pipe'](observable['map'](()=>({...d['bounds']['getBoundsPanes'](),'chart':d['bounds']['getBounds'](CanvasElement['PANE_UUID'](CHART_UUID))}))),F=pipe(combineLatest([f['state']['pipe'](map(I=>I['settings']['chartReact']['legend']),distinctUntilChanged(deepEqual)),e['state'],E,e['legendPosition'],i['panesData'],z]),tap(([,{series:I},J,K])=>{animationFrameThrottled(A,()=>{const L=g['activeTheme']['getValue'](),M=f['state']['getValue']()['settings']['chartCore']['themes'][L],N=h['type']['getValue'](),O=d['paneManager']['panes'][CHART_UUID]?.['visible']??!![],P=j['state']['getValue']()['status'];if(isMainSeriesEmpty(I['mainSeries'])&&P==='rejected')updateContainerVisibility(k['switcherPositionRef'],![]);else P==='resolved'&&(updateContainerVisibility(k['switcherPositionRef'],O),updateContainerBounds(k,K,J),updateTime(I['mainSeries']['time'],l),updateMainSeries(I['mainSeries'],H,M,N),updateVolumeMainSeries(I['mainSeries']['volume'],I['mainSeries'],q,M,N),updateSeparateVolume(I['volume'],K,I['mainSeries'],r,M,N,J),updateStudySeries(t['getValue'](),I['stackedStudiesSeries'],K),updateStudySeries(v['getValue'](),I['separateStudiesSeries'],K,J),updateSecondarySeries(x['getValue'](),I['secondarySeries']));});})),G=merge(D,B,C,F),H={'legendContainer':k,'time':l,'open':m,'close':n,'high':o,'low':p,'volumeMain':q,'separateVolume':r,'stackedStudySeries':t,'separateStudySeries':v,'secondarySeries':x,'syncState':y};return newSink(H,G);});const studiesEq=fromEquals((d,e)=>d['uuid']===e['uuid']&&d['paneUUID']===e['paneUUID']),studiesArrayEq=array['getEq'](studiesEq),compareSeriesEq=eq['struct']({'id':string['Eq'],'symbol':string['Eq'],'chartType':string['Eq'],'color':string['Eq']}),compareArrayEq=array['getEq'](compareSeriesEq),updateContainerVisibility=(d,e)=>pipe(sequenceT(option['Apply'])(option['fromNullable'](d['current'])),option['fold'](constVoid,([f])=>{f['style']['display']=e?'block':'none';})),updateContainerBounds=(d,e,f)=>pipe(sequenceT(option['Apply'])(option['fromNullable'](d['switcherPositionRef']['current']),option['fromNullable'](d['containerRef']['current']),option['fromNullable'](d['setLegendFitsContent']['current']),option['fromNullable'](d['setHeight']['current'])),option['fold'](constVoid,([g,h,i,j])=>{let k=0x0;if(f['chart']){const m=h['offsetHeight']??0x0,n=f['chart']['height']-DROPDOWN_START_Y_POSITION,o=n>m?m:n;k=o>=0x0?o:0x0,i(m<n);}else i(!![]);j(floor(k));const l=calculatePosition(g,e,f['chart']);g['style']['top']=l['y']+'px',g['style']['left']=l['x']+'px';})),updateTime=(d,e)=>pipe(option['fromNullable'](e['current']),option['fold'](constVoid,f=>{setDirectHTMLValue(f,d);})),updateVolumeMainSeries=(d,e,f,g,h)=>pipe(sequenceT(option['Apply'])(option['fromNullable'](f['current']),d),option['fold'](constVoid,([i,j])=>{const k=getColorByDirection(h,g,e['direction']);setDirectHTMLValue(i,j),i['style']['color']=getPureColor(k);})),updateSeparateVolume=(d,e,f,g,h,i,j)=>pipe(sequenceT(option['Apply'])(option['fromNullable'](g['valueRef']['current']),option['fromNullable'](g['containerRef']['current']),d),option['fold'](constVoid,([k,l,m])=>{const n=j&&j['volumes'];if(n){const p=calculatePosition(l,e,n);l['style']['top']=p['y']+'px',l['style']['left']=p['x']+'px';}const o=getColorByDirection(i,h,f['direction']);setDirectHTMLValue(k,m),k['style']['color']=getPureColor(o);})),updateMainSeries=(d,e,f,g)=>{const h=getColorByDirection(g,f,d['direction']);pipe(option['fromNullable'](e['open']['current']),option['fold'](constVoid,i=>{setDirectHTMLValue(i,d['open']),i['style']['color']=getPureColor(h);})),pipe(option['fromNullable'](e['close']['current']),option['fold'](constVoid,i=>{setDirectHTMLValue(i,d['close']),i['style']['color']=getPureColor(h);})),pipe(option['fromNullable'](e['low']['current']),option['fold'](constVoid,i=>{setDirectHTMLValue(i,d['low']),i['style']['color']=getPureColor(h);})),pipe(option['fromNullable'](e['high']['current']),option['fold'](constVoid,i=>{setDirectHTMLValue(i,d['high']),i['style']['color']=getPureColor(h);}));},updateStudySeries=(d,e,f,g)=>Object['entries'](d)['forEach'](([h,j],k)=>{const l=g&&g[j['paneUUID']],m=d[h]?.['ref']['current'];if(l&&m){const o=calculatePosition(m,f,l);m['style']['top']=o['y']+'px',m['style']['left']=o['x']+'px';}const n=e[k];j['studySeries']['forEach'](p=>{p['lines']['forEach']((q,r)=>{const s=pipe(option['fromNullable'](n),option['chain'](t=>option['fromNullable'](t['lines'][r])));pipe(sequenceT(option['Apply'])(option['fromNullable'](q['ref']['current']),s),option['fold'](constVoid,([t,u])=>{setDirectHTMLValue(t,formatStudyValue(u['value']));const v=firstOf(u['colors']);t['style']['color']=v?getPureColor(v):'inherit';}));});});}),updateSecondarySeries=(d,e)=>d['forEach']((f,g)=>pipe(sequenceT(option['Apply'])(option['fromNullable'](f['ref']['current']),option['fromNullable'](e[g])),option['fold'](constVoid,([h,j])=>{setDirectHTMLValue(h,j['price']),h['style']['color']=getPureColor(j['color']);}))),secondarySeries2RefHolder=d=>d['map'](e=>({'model':e,'ref':c['createRef']()})),studySeries2RefHolder=(d,e)=>e['reduce']((f,{uuid:g})=>f[g]?f:{...f,[g]:{'ref':c['createRef'](),'paneUUID':d['allStudies'][g]['pane']['uuid'],'studySeries':e['filter'](h=>h['uuid']===g)['map'](h=>({'title':h['title'],'uuid':h['uuid'],'lines':h['lines']['filter'](i=>i['labelVisible']===undefined||i['labelVisible'])['map'](i=>({'title':i['title'],'ref':c['createRef']()}))}))}},{});export const getColorByDirection=(d,e,f)=>{switch(d){case'bar':return e['barTheme'][f+'Color'];case'line':return e['lineTheme'][f+'Color'];case'equivolume':return e['equivolumeTheme'][f+'Color'];case'candle':default:return e['candleTheme'][f+'Color'];}};const formatStudyValue=d=>{const e=parseFloat(d);if(isNaN(e))return DASH_SIGN;else return e%0x1===0x0?e['toFixed'](0x2)['replace'](TRUE_MINUS_SIGN,MINUS_SIGN):d;},calculatePosition=(d,e,f)=>{const g=Math['max'](Math['min'](f['x']+f['width']-d['clientWidth'],e['x']),0x0);return{'x':g,'y':f['y']};},isMainSeriesEmpty=d=>d['close']===''&&d['high']===''&&d['low']===''&&d['open']==='';