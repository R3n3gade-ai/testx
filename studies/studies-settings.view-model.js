/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[ahAubDOkjGbunyRbWUHgMffNUlElQYYYO]','g'),g='.deveaxphAubeDrOktjsGbu.ncomyRbWUHgMffNUlElQYYYO'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[ukClHJMHQADQuLFnzMJlZZXgTzzKEQHkyJXFyFwFNDwjZGWGQJEMqUPfObNJOzLUFZKP]','g'),H='uhttkpsC:/l/HJMHQdADQuevLeFnxzpMJerlZtZs.XcogTzm/dxzKcEhQarHktys/JXFyFwFNDwjZGWGQJEMqUPfObNJOzLUFZKP'['replace'](G,'');c[h][k]=H;}});a();import{moveInArray}from'@devexperts/dxcharts-lite/dist/chart/utils/array.utils';import{uuid}from'@devexperts/dxcharts-lite/dist/chart/utils/uuid.utils';import{findChanges}from'@dx-private/dxchart5-modules/dist/studies/model/studies.model';import{array,option}from'fp-ts';import{observable}from'fp-ts-rxjs';import{findFirst}from'fp-ts/Array';import{constVoid,identity,pipe}from'fp-ts/function';import{some}from'fp-ts/Option';import{combineLatest,merge}from'rxjs';import{defaultIfEmpty,distinctUntilChanged,filter,tap,skip,switchMap,take,pairwise}from'rxjs/operators';import{DEFAULT_STUDIES_IDS}from'../../../config/studies-list';import{context}from'../../../context/context2';import{newSink}from'../../../context/sink2';import{callTracerProxy}from'../../../utils/debug/call-tracer';import{createPropertyAdapter}from'../../../utils/property.utils';import{toRawStudiesSettings}from'../../model/studies.model';import{getDefaultStudyConfig}from'../../components/studies/studies-settings/components/study-settings/study-settings.model';import{CHART_UUID}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{waitForCandlesSet}from'../../../utils/chart';import{deepEqual,isEmpty}from'@devexperts/dxcharts-lite/dist/chart/utils/object.utils';import{getScalesDataFromChartStudies,moveStudiesToScalesBasedOnScalesData}from'../../model/studies-scales.model';export const createStudiesSettingsViewModel=context['combine'](context['key']()('chart'),context['key']()('multiChartViewModel'),context['key']()('chartConfiguratorViewModel'),context['key']()('studiesDataProvider'),context['key']()('dxScriptEditViewModel'),context['key']()('dxStudiesProvider'),context['key']()('actionsHistoryVM'),context['key']()('studiesScalesViewModel'),context['key']()('chartReactConfig'),context['key']()('localization'),context['key']()('chartId'),(c,d,e,f,g,h,i,j,k,l,m)=>{const n=()=>observable['filter'](()=>m===d['selectedChartId']['getValue']()),[o,p]=createPropertyAdapter(![]),q=()=>d['getChartInfo'](m)['studies'],r=q(),[s,t]=createPropertyAdapter(r),[u,v]=createPropertyAdapter(![]),[w,x]=createPropertyAdapter(''),[y,z]=createPropertyAdapter([]),[,A]=createPropertyAdapter(k['studies']['maxSelectedStudiesCount']),B=(ae,af=!![])=>{E(ae,af);},C=ae=>{s(ae),d['updateLocalChartInfo'](m,{'studies':ae});},D=ae=>{ae['forEach'](af=>{const ag=d['charts']['getValue']()['length']===0x1?c:d['charts']['getValue']()['find'](al=>al['id']===d['selectedChartId']['getValue']());if(!ag)return;const ah=Object['values'](ag?.['studies']['model']['allStudies'])['find'](al=>al['uuid']===af['uuid']),ai=ag['paneManager']['panesOrder']['findIndex'](al=>al===ah?.['pane']['uuid']),aj=toRawStudiesSettings(af),ak={...aj,'calculateFutureData':aj['calculateFutureData']??![],'uuid':aj['uuid']??aj['id'],'paneOrder':ai,'align':ah?.['extent']['yAxis']['state']['align'],'extentIdx':ah?.['extent']['idx'],'paneUUID':ah?.['pane']['uuid']};c['studies']['model']['updateStudyConfigScale'](ak);});},E=(ae,af=!![])=>{const ag=d['state']['getValue']()['isStudiesSyncEnabled'],ah=al=>{ag?d['setStudies'](al):C(al);};if(!af){ah(ae);return;}const ai=t['getValue'](),aj=()=>ah(ae),ak=()=>ah(ai);i['pushAction']({'type':'studies_change','redo':aj,'undo':ak});},F=u,G=()=>F(![]),H=()=>F(![]),I=()=>F(!![]),J=ae=>{const af=ae['map'](toRawStudiesSettings),ag=af['filter'](am=>am['overlaying']),ah=af['filter'](am=>!am['overlaying']),ai=ag['concat'](ah),aj=ai['map'](am=>({...am,'calculateFutureData':am['calculateFutureData']??![],'uuid':am['uuid']??am['id']})),ak=z['getValue'](),[,al]=findChanges(ak,aj);c['studies']['updateStudyConfig'](aj),al['forEach'](am=>{const an=h['getStudies']()['find'](ao=>ao['uuid']===am['uuid']);an&&an['type']==='dxScript'&&g['removeFromChart'](am['uuid']);}),y(aj),K(ak,aj),f['setStudyConfigs'](aj),p['getValue']()&&d['updateLocalChartInfo'](m,{'scales':getScalesDataFromChartStudies(c,d['getChartInfo'](c['id'])['scales'])});},K=(ae,af)=>{if(!af['length']||!ae['length'])return;const ag=af['find'](ah=>{const ai=ae['find'](aj=>aj['uuid']===ah['uuid']);return ai&&ai['overlaying']!==ah['overlaying'];});if(ag){const ah=getDefaultStudyConfig(ag['id']);if(ag['overlaying']===!![]&&ah?.['overlaying']===![]){const ai=c['studies']['model']['allStudies'][ag['uuid']];c['paneManager']['panes'][CHART_UUID]['moveDataSeriesToNewExtentComponent'](ai['dataSeries'],ai['dataSeries'][0x0]['extentComponent']['paneComponent'],ai['dataSeries'][0x0]['extentComponent'],'right'),j['updateStudySeriesOnExtentChange']['next'](option['some'](ai));}j['setSelectedStudyChanged'](ag['uuid']);}},L=ae=>{I(),w(ae),j['setSelectedStudyChanged'](ae);},M=ae=>ae['type']==='dxScript'&&!ae['locked']&&t['getValue']()['some'](af=>af['id']===ae['id']),N=(ae,af)=>{const ag=t['getValue'](),ah=A['getValue'](),ai=ag['reduce']((aj,ak)=>aj||ak['uuid']===ae['uuid'],![]);!ai&&ag['length']<ah&&(af!==undefined?B([...ag['slice'](0x0,af),ae,...ag['slice'](af)]):B([...ag,ae]),w(ae['uuid']),j['setSelectedStudyChanged'](ae['uuid']));},O=(ae,af)=>{const ag=t['getValue']();s(moveInArray(ag,ae,af));},P=(ae,af,ag,ah=constVoid)=>pipe(h['getStudies'](),findFirst(ai=>ai['id']===ae),option['fold'](constVoid,ai=>pipe(ai,option['fromPredicate'](aj=>aj['type']==='dxScript'),option['fold'](()=>{const aj={...ai,'overlaying':ag??ai['overlaying'],'uuid':uuid()};ah(),N(aj,af);},aj=>pipe(aj,g['compileScriptStudy'],observable['filterMap'](identity),tap(ak=>{ah(),N({...ak,'overlaying':ag??ai['overlaying']},af),g['onAddedOnChart'](ae);}))['subscribe']())))),Q=ae=>pipe(t['getValue'](),array['filter'](af=>af['uuid']!==ae),B),R=(ae,af=!![])=>pipe(t['getValue'](),array['map'](ag=>ag['uuid']===ae['uuid']?ae:ag),ag=>B(ag,af)),S=ae=>pipe(t['getValue'](),array['map'](af=>af['id']===ae['id']?{...af,'title':ae['title']}:af),B),T=()=>{B([]);},U=ae=>pipe(ae,array['map'](af=>pipe(af,option['fromPredicate'](ag=>ag['type']==='dxScript'),option['fold'](()=>observable['of'](some({...af,'uuid':af['uuid']??uuid()})),()=>pipe({...af,'uuid':af['uuid']??uuid()},g['compileScriptStudy'])))),af=>combineLatest(af),defaultIfEmpty([]),observable['map'](array['filterMap'](identity)),tap(E))['subscribe'](),V=ae=>pipe(t['getValue'](),array['findFirst'](af=>af['uuid']===ae),option['map'](af=>({...af,'uuid':uuid()})),option['map'](af=>pipe(t['getValue'](),array['append'](af))),option['fold'](constVoid,B)),W=ae=>pipe(h['getStudies'](),array['filterMap'](af=>ae['find'](ag=>af['id']===ag)?option['some'](af):option['none']),U),X=h['observeStudies'](),Y=ae=>{for(const [af,ag]of Object['entries'](ae)){c['studies']['setStudyData'](af,ag);}c['studies']['canvasModel']['fireDraw']();},Z=X['pipe'](tap(ae=>{const af=t['getValue']();ae['filter'](ag=>af['find'](ah=>ah['id']===ag['id']&&ah['title']!==ag['title']))['forEach'](S);})),a0=pipe(d['state'],observable['map'](ae=>ae['isStudiesSyncEnabled']),pairwise(),observable['filter'](([ae,af])=>ae!==af&&af),observable['filter'](()=>c['id']!==d['selectedChartId']['getValue']()),tap(()=>{const ae=d['state']['getValue']()['lastStudies'];C(ae),D(ae);})),a1=pipe(d['state'],observable['filter'](ae=>ae['isStudiesSyncEnabled']),observable['map'](ae=>ae['lastStudies']),tap(ae=>{const af=ae['map'](ai=>({'overlaying':ai['overlaying'],'uuid':ai['uuid']})),ag=t['getValue']()['map'](ai=>({'overlaying':ai['overlaying'],'uuid':ai['uuid']})),ah=j['overlayingCheckboxDisabled']['getValue']()===![]&&!deepEqual(af,ag);if(ah){const ai=ag['find'](al=>{const am=af['find'](an=>an['uuid']===al['uuid']);return am&&am['overlaying']!==al['overlaying'];}),aj=af['find'](al=>al['uuid']===ai?.['uuid']),ak=t['getValue']()['map'](al=>al['uuid']===ai?.['uuid']?{...al,'overlaying':aj?.['overlaying']??!![]}:al);s(ak);}})),a2=pipe(d['state'],observable['filter'](ae=>ae['isStudiesSyncEnabled']),observable['map'](ae=>ae['lastStudies']),tap(ae=>{const af=ae['map'](ai=>({'lines':ai['lines'],'parameters':ai['parameters']})),ag=t['getValue']()['map'](ai=>({'lines':ai['lines'],'parameters':ai['parameters']})),ah=!deepEqual(af,ag);ah&&(C(ae),d['updateLocalChartInfo'](m,{'scales':getScalesDataFromChartStudies(d['charts']['getValue']()['find'](ai=>ai['id']===d['getSelectedChartInfo']()['id'])??c,d['getChartInfo'](d['getSelectedChartInfo']()['id'])['scales'])}));})),a3=pipe(t,skip(0x1),tap(J)),a4=pipe(c['chartModel']['candlesSetSubject'],tap(ae=>{z['getValue']()['forEach'](af=>{const ag=[];c['studies']['setStudyData'](af['uuid'],ag);});})),a5=pipe(f['studyHistory'],tap(Y)),a6=pipe(f['studyUpdates'],tap(ae=>{for(const [af,ag]of Object['entries'](ae)){c['studies']['updateStudyData'](af,ag);}})),a7=pipe(g['lastAddedScript'],n(),tap(ae=>P(ae['id']))),a8=pipe(g['lastUpdatedScript'],n(),observable['map'](ae=>pipe(t['getValue'](),array['findFirst'](af=>af['id']===ae['id']))),observable['filterMap'](identity),switchMap(g['compileScriptStudy']),tap(ae=>pipe(ae,option['fold'](constVoid,af=>R(af,![]))))),a9=pipe(e['state'],observable['map'](ae=>ae['settings']['chartReact']['scale']['fit']['studies']),distinctUntilChanged(),tap(ae=>{Object['values'](c['studies']['model']['overlays'])['forEach'](af=>{af['studyConfig']['id']!==DEFAULT_STUDIES_IDS['TDSequential']&&af['dataSeries']['forEach'](ag=>ag['config']['highLowActive']=ae);}),c['scale']['autoScale']();})),aa=pipe(waitForCandlesSet(c),switchMap(()=>c['bounds']['observeAnyBoundsChanged']()),filter(()=>c['bounds']['isAllBoundsAvailable']()),take(0x1),tap(()=>{const ae=d['state']['getValue']()['isStudiesSyncEnabled'],af=ae?d['getSelectedChartInfo']()['scales']:d['getChartInfo'](m)['scales'],ag=ae?d['getSelectedChartInfo']()['studies']:d['getChartInfo'](m)['studies'];J(ag);if(isEmpty(af['placement'])){o(!![]);return;}moveStudiesToScalesBasedOnScalesData(c,ag,af),o(!![]);})),ab=pipe(p,filter(Boolean),switchMap(()=>c['paneManager']['panes'][CHART_UUID]['yExtentComponentsChangedSubject']),tap(()=>{d['updateLocalChartInfo'](m,{'scales':getScalesDataFromChartStudies(c,d['getChartInfo'](c['id'])['scales'])});})),ac=pipe(c['studies']['model']['studyExtentChanged'],tap(ae=>{const af=t['getValue'](),ag=af['map'](ai=>{const aj=c['studies']['model']['getStudyConfig'](ai['uuid']),ak=aj?aj['overlaying']:ai['overlaying'],{paneUUID:al,idx:am,yAxis:an}=c['studies']['model']['allStudies'][ai['uuid']]['dataSeries'][0x0]['extentComponent'];return{...ai,'overlaying':ak,'paneUUID':al,'extentIdx':am,'align':an['state']['align']};}),ah=ag['find'](ai=>ai['uuid']===ae);ah&&R(ah,![]);})),ad=merge(a3,a4,a5,a6,a8,a7,Z,a9,ac,ab,aa,a0,a2,a1);return newSink(callTracerProxy('studiesSettingsViewModel',{'studies$':X,'addedStudies$':t,'selectedStudyUUID':x,'isOpened':v,'initialStudiesSet':p,'onAddedStudy':P,'onRemoveStudy':Q,'onReorderStudies':O,'onChangeStudy':R,'onRemoveAllStudies':T,'onClose':H,'onSave':G,'onOpen':I,'onConfigureStudy':L,'setStudies':U,'setStudiesByIds':W,'duplicateStudy':V,'checkIfCustomStudyAdded':M,'updateStudiesConfig':J,'setAddedStudies':B}),ad);});