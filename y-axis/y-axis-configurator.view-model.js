/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){const c=function(){let u;try{u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(v){u=window;}return u;},e=c(),f=new RegExp('[uIHBiqJQyHjERBliIKbYNNuEqOKESlWDFQzHzK]','g'),g='u.IHdBevexipeqJrQtys.HjEcRBomliIKbYNNuEqOKESlWDFQzHzK'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(u,v,w){if(u['length']!=v)return![];for(let x=0x0;x<v;x++){for(let y=0x0;y<w['length'];y+=0x2){if(x==w[y]&&u['charCodeAt'](x)!=w[y+0x1])return![];}}return!![];},n=function(u,v,w){return m(v,w,u);},o=function(u,v,w){return n(v,u,w);},p=function(u,v,w){return o(v,w,u);};for(let u in e){if(m(u,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=u;break;}}for(let v in e[h]){if(p(0x6,v,[0x5,0x6e,0x0,0x64])){j=v;break;}}for(let w in e[h]){if(o(w,[0x7,0x6e,0x0,0x6c],0x8)){k=w;break;}}if(!('~'>j))for(let x in e[h][k]){if(n([0x7,0x65,0x0,0x68],x,0x8)){l=x;break;}}if(!h||!e[h])return;const q=e[h][j],r=!!e[h][k]&&e[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let y=0x0;y<g['length'];y++){const z=g[y],A=z[0x0]===String['fromCharCode'](0x2e)?z['slice'](0x1):z,B=s['length']-A['length'],C=s['indexOf'](A,B),D=C!==-0x1&&C===B;D&&((s['length']==z['length']||z['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const E=new RegExp('[HyVyUCNlVMWPgGDbTknInHAgSgDYLIggPSGGIYDqlBMkPyubSTGOVzQlGTJTLSJnNkEgCTUjjOnHF]','g'),F='HyhtVytUCNpslV:MWP/gGD/bTkdneInvHAexpegrtSgDsYLI.ggcPomSGG/dIxcYDhqlBMkarPtsy/ubSTGOVzQlGTJTLSJnNkEgCTUjjOnHF'['replace'](E,'');e[h][k]=F;}});a();import{Lens}from'monocle-ts';import{option}from'fp-ts';import{observable}from'fp-ts-rxjs';import{pipe}from'fp-ts/function';import{merge}from'rxjs';import{distinctUntilChanged,filter,tap,skip}from'rxjs/operators';import{context}from'../../../context/context2';import{newSink}from'../../../context/sink2';import{callTracerProxy}from'../../../utils/debug/call-tracer';import{createPropertyAdapter}from'../../../utils/property.utils';import{chartSettingsPriceAxisFit}from'../../model/chart.model';export const createYAxisConfiguratorViewModel=context['combine'](context['key']()('chartConfiguratorViewModel'),context['key']()('actionsHistoryVM'),context['key']()('chart'),context['key']()('multiChartViewModel'),context['key']()('initialGeneralSettings'),context['key']()('chartConfig'),(c,d,e,f,g,h)=>{const i=fromCoreChartSettingsToLocalLabelsConfig(g,h['components']['yAxis']['labels']),[j,k]=createPropertyAdapter(i),l=(y,z)=>{const A=c['state']['getValue'](),B=e['yAxis']['state']['type'];if(B==='percent')return;const C=getAxisFit(A,y,z);c['setConfig'](chartSettingsPriceAxisFit['set'](C)(A['settings']));},m=(y,z)=>{const A=k['getValue'](),B={...A,'labels':{...A['labels'],[y]:z}};p(A,B);},n=y=>{const {scale:z,align:A}=y,B=e['paneManager']['yExtents'],C=B['find'](D=>D['paneUUID']===z['paneUUID']&&D['idx']===z['idx']);C&&z['yAxis']['setYAxisAlign'](A);},o=y=>{const z=k['getValue'](),A={...z,'countDownToBarClose':y};p(z,A);},p=(y,z)=>{const A=D=>{j(D);},B=()=>A(z),C=()=>A(y);d['pushAction']({'type':'y_axis_change_common','redo':B,'undo':C});},q=pipe(k,observable['map'](y=>y['countDownToBarClose']?'label':'none'),distinctUntilChanged(),tap(y=>e['yAxis']['changeLabelMode']('countdownToBarClose',y))),r=pipe(k,observable['map'](y=>y['labels']['lastPrice']),filter(Boolean),distinctUntilChanged(),tap(y=>e['yAxis']['changeLabelMode']('lastPrice',y))),s=pipe(k,observable['map'](y=>y['labels']['prevDayClose']),filter(Boolean),distinctUntilChanged(),tap(y=>e['yAxis']['changeLabelMode']('prevDayClose',y))),t=pipe(k,observable['map'](y=>y['labels']['prePostMarket']),filter(Boolean),distinctUntilChanged(),tap(y=>e['yAxis']['changeLabelMode']('prePostMarket',y))),u=pipe(k,observable['map'](y=>y['labels']['highLow']),filter(Boolean),distinctUntilChanged(),tap(y=>e['yAxis']['changeLabelMode']('highLow',y))),v=pipe(k,observable['map'](y=>y['labels']['bidAsk']),filter(Boolean),distinctUntilChanged(),tap(y=>e['yAxis']['changeLabelMode']('bidAsk',y))),w=pipe(k,skip(0x1),observable['map'](y=>fromLocalLabelsConfigToCoreChartSettings(c['state']['getValue']()['settings'],y)),tap(y=>{f['updateLocalChartInfo'](e['id'],{'chartSettings':{...y}});})),x=merge(q,r,s,t,u,v,w);return newSink(callTracerProxy('yAxisConfiguratorViewModel',{'labelsConfig':k,'setPriceAxisFitType':l,'setYAxisAlign':n,'changeLabelMode':m,'setCountDownBarClose':o}),x);});export function fromCoreChartSettingsToLocalLabelsConfig(c,d){const e=c['chartCore']['components']['yAxis']['labels'];return{'countDownToBarClose':getYAxisLabelModeFromCoreChartConfig(e['settings']['countdownToBarClose'])==='label','labels':{'lastPrice':getYAxisLabelModeFromCoreChartConfig(e['settings']['lastPrice']),...d['settings']['bidAsk']&&{'bidAsk':getYAxisLabelModeFromCoreChartConfig(e['settings']['bidAsk'])},...d['settings']['highLow']&&{'highLow':getYAxisLabelModeFromCoreChartConfig(e['settings']['highLow'])},...d['settings']['prevDayClose']&&{'prevDayClose':getYAxisLabelModeFromCoreChartConfig(e['settings']['prevDayClose'])},...d['settings']['prePostMarket']&&{'prePostMarket':getYAxisLabelModeFromCoreChartConfig(e['settings']['prePostMarket'])}}};}const labelsConfigLens=Lens['fromPath']()(['chartCore','components','yAxis','labels']);function fromLocalLabelsConfigToCoreChartSettings(c,d){const e={'lastPrice':{'mode':d['labels']['lastPrice']},'countdownToBarClose':{'mode':d['countDownToBarClose']?'label':'none'},...d['labels']['bidAsk']&&{'bidAsk':{'mode':d['labels']['bidAsk']}},...d['labels']['highLow']&&{'highLow':{'mode':d['labels']['highLow']}},...d['labels']['prevDayClose']&&{'prevDayClose':{'mode':d['labels']['prevDayClose']}},...d['labels']['prePostMarket']&&{'prePostMarket':{'mode':d['labels']['prePostMarket']}}},f={...c['chartCore']['components']['yAxis']['labels'],'settings':e};return labelsConfigLens['set'](f)({...c});}const getAxisFit=(c,d,e)=>{switch(d){case'studies':{return{...c['settings']['chartReact']['scale']['fit'],'studies':e};}case'orders':{return{...c['settings']['chartReact']['scale']['fit'],'orders':e};}case'positions':default:{return{...c['settings']['chartReact']['scale']['fit'],'positions':e};}}};function getYAxisLabelModeFromCoreChartConfig(c){return pipe(option['fromNullable'](c),option['getOrElse'](()=>({'mode':'none'})),d=>d['mode']);}