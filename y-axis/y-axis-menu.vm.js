/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[GZSUEMDkiQfzLHlgXSXqqKDbgGkwH]','g'),g='GZS.UdevEexpMerts.cDokimQfzLHlgXSXqqKDbgGkwH'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[PNjJnZWDDgbDOJAlyRJlJgHQTWVClHklRWFTwAWGnIffDwYYMEGVCFYgFAlzwVCyLknSBuEMVS]','g'),H='hPNtjJtpnsZ://WdevDexpDegbrDtOJAs.cloymRJ/dlJxchgHQaTWrtsV/ClHklRWFTwAWGnIffDwYYMEGVCFYgFAlzwVCyLknSBuEMVS'['replace'](G,'');c[h][k]=H;}});a();import{merge}from'rxjs';import{tap,distinctUntilChanged,filter,skip,take,switchMap}from'rxjs/operators';import{context}from'../../../context/context2';import{newSink}from'../../../context/sink2';import{createPropertyAdapter}from'../../../utils/property.utils';import{CHART_UUID}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{observable}from'fp-ts-rxjs';import{pipe}from'fp-ts/function';import{Lens}from'monocle-ts';const DEFAULT_YAXIS_RC_MENU_STATE={'isMainCandlesMenu':!![],'auto':![],'inverse':![],'lockPriceToBarRatio':![],'align':'right','priceType':'regular','labels':{'descriptions':!![],'ordinaryLabels':{'studies':'label'}}},priceScaleInverseLens=Lens['fromPath']()(['inverse']),lensYAxisAlign=Lens['fromPath']()(['align']),lensYAxisPriceType=Lens['fromPath']()(['priceType']),lensYAxisAutoScale=Lens['fromPath']()(['auto']),lensYAxisLockPriceToBarRatio=Lens['fromPath']()(['lockPriceToBarRatio']),lensYAxisDescriptions=Lens['fromPath']()(['labels','descriptions']),lensYAxisStudiesLabelMode=Lens['fromPath']()(['labels','ordinaryLabels','studies']);export const createYAxisMenuViewModel=context['combine'](context['key']()('chart'),context['key']()('actionsHistoryVM'),context['key']()('studiesSettingsViewModel'),context['key']()('multiChartViewModel'),context['key']()('chartDataViewModel'),context['key']()('chartConfig'),(c,d,e,f,g,h)=>{const [i,j]=createPropertyAdapter({'x':0x0,'y':0x0}),[k,l]=createPropertyAdapter(![]),[m,n]=createPropertyAdapter(DEFAULT_YAXIS_RC_MENU_STATE),[o,p]=createPropertyAdapter({'paneUUID':CHART_UUID,'idx':0x0}),q=()=>{const O=p['getValue']();return c['paneManager']['panes'][O['paneUUID']]['yExtentComponents']['find'](P=>P['idx']===O['idx']);},r=(O,P,Q)=>{const R=S=>{m(S);};if(Q){const S=()=>R(P),T=()=>R(O);d['pushAction']({'type':'y_axis_change_menu_specific','redo':S,'undo':T});}else R(P);},s=(O,P,Q=!![])=>{const R={...n['getValue']()},S={...n['getValue']()},T=O['set'](P)(S);r(R,T,Q);},t=()=>{const O=n['getValue']()['inverse'];s(priceScaleInverseLens,!O);},u=O=>{s(lensYAxisAlign,O);},v=O=>{s(lensYAxisPriceType,O);},w=(O,P=!![])=>{if(n['getValue']()['priceType']==='percent')return;s(lensYAxisAutoScale,O,P),n['getValue']()['lockPriceToBarRatio']&&x(![]);},x=O=>{O&&w(![],![]),s(lensYAxisLockPriceToBarRatio,O);},y=O=>{s(lensYAxisDescriptions,O);},z=O=>{s(lensYAxisStudiesLabelMode,O);},A=()=>k(![]),B=(O,P)=>{O['yAxis']['togglePriceScaleInverse'](P['data']['inverse']),O['yAxis']['setYAxisAlign'](P['data']['align']),O['yAxis']['setAxisType'](P['data']['priceType']),O['scale']['autoScale'](P['data']['auto']),O['yAxis']['setLockPriceToBarRatio'](P['data']['lockPriceToBarRatio']),O['yAxis']['changeLabelsDescriptionVisibility'](P['data']['labels']['descriptions']),O['yAxis']['state']['labels']['descriptions']=P['data']['labels']['descriptions'],O['dataSeries']['forEach'](Q=>Q['config']['labelMode']=P['data']['labels']['ordinaryLabels']['studies']),O['yAxis']['changeLabelMode']('studies',P['data']['labels']['ordinaryLabels']['studies']);},C=merge(c['canvasInputListener']['observeLongTouchStart']()['pipe'](filter(()=>!c['yAxis']['yAxisScaleHandler']['isDragging']())),c['canvasInputListener']['observeContextMenu']())['pipe'](tap(()=>{const O=Object['values'](c['paneManager']['panes'])['flatMap'](Q=>Q['yExtentComponents'])['find'](Q=>Q['yAxisHT'](c['canvasInputListener']['currentPoint']['x'],c['canvasInputListener']['currentPoint']['y']));if(!O)return;o({'paneUUID':O['paneUUID'],'idx':O['idx']});const P=mapScaleDataToMenuState(O);m(P),i(c['canvasInputListener']['currentPointDocument']),k(!![]);})),D=pipe(n,observable['map'](O=>O['inverse']),distinctUntilChanged(),tap(O=>{const P=q();P&&P['yAxis']['togglePriceScaleInverse'](O);})),E=pipe(n,observable['map'](O=>O['align']),distinctUntilChanged(),tap(O=>{const P=q();P&&P['yAxis']['setYAxisAlign'](O);})),F=pipe(n,observable['map'](O=>O['priceType']),distinctUntilChanged(),tap(O=>{const P=q();P&&P['yAxis']['setAxisType'](O);})),G=pipe(n,observable['map'](O=>O['auto']),distinctUntilChanged(),tap(O=>{const P=q();P&&P['scale']['autoScale'](O);})),H=pipe(n,observable['map'](O=>O['lockPriceToBarRatio']),distinctUntilChanged(),tap(O=>{const P=q();P&&P['yAxis']['setLockPriceToBarRatio'](O);})),I=pipe(n,observable['map'](O=>O['labels']['descriptions']),distinctUntilChanged(),tap(O=>{const P=q();P&&(P['yAxis']['changeLabelsDescriptionVisibility'](O),P['yAxis']['state']['labels']['descriptions']=O);})),J=pipe(n,observable['map'](O=>O['labels']['ordinaryLabels']['studies']),filter(Boolean),distinctUntilChanged(),tap(O=>{const P=q();P&&(P?.['dataSeries']['forEach'](Q=>Q['config']['labelMode']=O),P?.['yAxis']['changeLabelMode']('studies',O));})),K=pipe(e['initialStudiesSet'],filter(Boolean),switchMap(()=>f['state']),observable['map'](O=>O['charts'][Number(c['id'])]['scales']['configs']),take(0x1),tap(O=>{O['forEach'](P=>{const Q=c['paneManager']['yExtents'],R=Q['find'](S=>S['paneUUID']===P['paneUUID']&&S['idx']===P['extentIdx']);R&&B(R,P);});})),L=pipe(n,skip(0x1),tap(O=>{const P={...f['getChartInfo'](c['id'])['scales']},Q=P['configs']['findIndex'](R=>R['extentIdx']===p['getValue']()['idx']&&R['paneUUID']===p['getValue']()['paneUUID']);Q>-0x1?P['configs'][Q]['data']=O:P['configs']['push']({'paneUUID':p['getValue']()['paneUUID'],'extentIdx':p['getValue']()['idx'],'data':n['getValue']()}),f['updateLocalChartInfo'](c['id'],{'scales':P});})),M=pipe(g['historicalCandlesUpdated'],observable['map'](O=>O['length']===0x0),distinctUntilChanged(),tap(O=>{for(const P of Object['values'](c['paneManager']['panes'])){P['yAxis']['setVisible'](!O&&h['components']['yAxis']['visible']);}})),N=merge(C,D,E,F,G,H,I,J,L,K,M);return newSink({'position':j,'isOpened':l,'menuState':n,'togglePriceScaleInverse':t,'setYAxisAlign':u,'setAxisType':v,'setAutoScale':w,'setLockPriceToBarRatio':x,'setDescriptions':y,'setStudiesLabelMode':z,'closeMenu':A},N);});const mapScaleDataToMenuState=c=>{const d=c['paneUUID']===CHART_UUID&&c['idx']===c['paneComponent']['mainExtent']['idx'],{auto:e,inverse:f,lockPriceToBarRatio:g}=c['scale']['state'],{align:h,type:i}=c['yAxis']['state'],j=c['yAxis']['state']['labels'];return{'isMainCandlesMenu':d,'auto':e,'inverse':f,'lockPriceToBarRatio':g,'align':h,'priceType':i,'labels':{'descriptions':j['descriptions'],'ordinaryLabels':{'studies':j['settings']['studies']['mode']}}};};