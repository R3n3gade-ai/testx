/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[SfTHACRYgUWCfiDXVZEnIhBuwyaUhyINTIHhUg]','g'),g='Sf.deTvexpeHrAtsC.RYcomgUWCfiDXVZEnIhBuwyaUhyINTIHhUg'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[VEMYWRlPSQwfLOUQMRWPFMlVzYXCKNuYDKCGUuAgTwVQklKfIKPPUAlzANuUDSVfOABSILLHL]','g'),H='VEMhttpYWRs://dlevexPSperQts.cowmfL/OUQMRWPdxcharFtsM/lVzYXCKNuYDKCGUuAgTwVQklKfIKPPUAlzANuUDSVfOABSILLHL'['replace'](G,'');c[h][k]=H;}});a();import{nonEmptyArray,option}from'fp-ts';import{observable}from'fp-ts-rxjs';import{pipe}from'fp-ts/function';import{merge}from'rxjs';import{distinctUntilChanged,finalize,tap}from'rxjs/operators';import{context}from'../../context/context2';import{newSink}from'../../context/sink2';import{callTracerProxy}from'../../utils/debug/call-tracer';import{createPropertyAdapter}from'../../utils/property.utils';import{getChartsAmount}from'../model/multichart.model';import{timeframeEq}from'../model/timeframe.model';import{crossToolEq}from'./cross-tool.vm';import{createAdapter}from'../../utils/adapter.utils';export const DEFAULT_TIMESTAMP_RANGE=[0x0,0x0];export const DEFAULT_OFFSETS={'visible':!![],'top':0x0,'bottom':0x0,'right':0x0,'left':0x0};export const createMultiChartViewModel=context['combine'](context['key']()('chartConfig'),c=>(d,e)=>{const [f,g]=createPropertyAdapter([]),[h,i]=createPropertyAdapter(d),[j,k]=createPropertyAdapter({'units':DEFAULT_TIMESTAMP_RANGE,'timestamps':DEFAULT_TIMESTAMP_RANGE,'animatedSync':![]}),[l,m]=createPropertyAdapter(e),[n,o]=createPropertyAdapter(e),[p,q]=createPropertyAdapter(![]),[r,s]=createAdapter(),[t,u]=createAdapter(),[v,w]=createAdapter(),x=new Set(),y=ac=>{return x['add'](ac),()=>x['delete'](ac);},z=pipe(g,observable['chain'](ac=>merge(ac['map'](ad=>merge(ad['canvasInputListener']['observeMouseDown'](),ad['canvasInputListener']['observeContextMenu']())['pipe'](observable['map'](()=>ad['id']))))),observable['flatten'],distinctUntilChanged(),tap(l)),A=pipe(m,tap(ac=>x['forEach'](ad=>ad(ac))),finalize(()=>x['clear']())),B=ac=>{h({...i['getValue'](),'layout':ac,'maximizedChartId':option['none']});},C=ac=>{h({...i['getValue'](),'lastChartType':ac});},D=ac=>{h({...i['getValue'](),'isChartTypeSyncEnabled':ac});},E=ac=>{h({...i['getValue'](),'lastInstrument':ac});},F=ac=>{h({...i['getValue'](),'isInstrumentSyncEnabled':ac});},G=ac=>{h({...i['getValue'](),'lastTimezone':ac});},H=ac=>{h({...i['getValue'](),'isTimezoneSyncEnabled':ac});},I=ac=>{h({...i['getValue'](),'lastAggregationPeriodType':ac});},J=ac=>{h({...i['getValue'](),'isAggregationPeriodTypeSyncEnabled':ac});},[K,L]=createPropertyAdapter(option['none']),[M,N]=createPropertyAdapter({'crosshairType':d['charts'][0x0]['chartSettings']['chartCore']['components']['crossTool']['type']}),O=ac=>{!crossToolEq['equals'](ac,L['getValue']())&&K(ac);},P=ac=>{h({...i['getValue'](),'isCrosshairSyncEnabled':ac});},Q=ac=>{!timeframeEq['equals'](ac,k['getValue']())&&j(ac);},R=ac=>{h({...i['getValue'](),'offsets':ac});},S=ac=>{const ad=i['getValue']();ad['isGeneralSettingsSyncEnabled']&&pipe(ad['charts'],nonEmptyArray['map'](ae=>({...ae,'chartSettings':{...ae['chartSettings'],...ac}})),W);},T=ac=>{const ad=Z();h({...i['getValue'](),'isGeneralSettingsSyncEnabled':ac}),ac&&S(ad['chartSettings']);},U=ac=>{const ad=pipe(i['getValue']()['charts'],nonEmptyArray['map'](ae=>({...ae,'studies':ac})));W(ad),h({...i['getValue'](),'lastStudies':ac});},V=ac=>{const ad=Z();h({...i['getValue'](),'isStudiesSyncEnabled':ac,'lastStudies':ad['studies']});},W=ac=>{h({...i['getValue'](),'charts':ac});},X=ac=>{h({...i['getValue'](),'maximizedChartId':ac});},Y=ac=>i['getValue']()['charts']['find'](ad=>ad['id']===ac)??i['getValue']()['charts'][0x0],Z=()=>Y(m['getValue']()),a0=()=>i['getValue']()['charts'],a1=(ac,ad)=>pipe(i['getValue']()['charts'],nonEmptyArray['map'](ae=>{if(ae['id']===ac)return{...ae,...ad};return ae;}),W),a2=()=>pipe(i['getValue'](),({layout:ac})=>ac['match'](/(?<rows>\d)x(?<columns>\d)/),ac=>[parseInt(ac?.['groups']?.['rows']??'1',0xa),parseInt(ac?.['groups']?.['columns']??'1',0xa)]),a3=ac=>{h({...i['getValue'](),'drawingMode':ac});},a4=pipe(i,observable['map'](ac=>ac['drawingMode']),distinctUntilChanged(),tap(ac=>{g['getValue']()['map'](ad=>ad['drawings']['setDrawingMode'](ac));})),a5=ac=>{h({...i['getValue'](),'magnetMode':ac});},a6=pipe(i,observable['map'](ac=>ac['magnetMode']),distinctUntilChanged(),tap(ac=>g['getValue']()['map'](ad=>ad['drawings']['setMagnetMode'](ac,c['components']['drawings']['magnet'])))),a7=pipe(N,observable['filter'](()=>i['getValue']()['isCrosshairSyncEnabled']),tap(ac=>pipe(i['getValue']()['charts'],nonEmptyArray['map'](ad=>{return ad['chartSettings']['chartCore']['components']['crossTool']['type']=ac['crosshairType'],ad;}),W))),a8=()=>pipe(i['getValue'](),ac=>({'isAggregationPeriodTypeSyncEnabled':ac['isAggregationPeriodTypeSyncEnabled'],'isGeneralSettingsSyncEnabled':ac['isGeneralSettingsSyncEnabled'],'isChartTypeSyncEnabled':ac['isChartTypeSyncEnabled'],'isInstrumentSyncEnabled':ac['isInstrumentSyncEnabled'],'isTimezoneSyncEnabled':ac['isTimezoneSyncEnabled'],'isStudiesSyncEnabled':ac['isStudiesSyncEnabled'],'isCrosshairSyncEnabled':ac['isCrosshairSyncEnabled']})),a9=()=>pipe(i['getValue'](),ac=>ac['isAggregationPeriodTypeSyncEnabled']||ac['isChartTypeSyncEnabled']||ac['isCrosshairSyncEnabled']||ac['isStudiesSyncEnabled']||ac['isGeneralSettingsSyncEnabled']||ac['isInstrumentSyncEnabled']),aa=pipe(i,observable['map'](ac=>ac['layout']),distinctUntilChanged(),tap(ac=>{parseInt(m['getValue'](),0xa)>=getChartsAmount(ac)&&l('0');})),ab=merge(z,A,a4,a6,a7,aa);return newSink(callTracerProxy('multiChartViewModel',{'state':i,'hoveredChartId':o,'setHoveredChartId':n,'crosshair':L,'setCrosshairSync':P,'setCrosshairSettings':M,'crosshairSettings':N,'updateCrosshair':O,'updateTimeframe':Q,'timeframe':k,'setState':h,'setLayout':B,'setChartTypeSync':D,'setInstrumentSync':F,'setChartType':C,'setInstrument':E,'setTimezone':G,'setTimezoneSync':H,'setAggregationPeriodType':I,'setAggregationPeriodTypeSync':J,'setGeneralSettingsForAllCharts':S,'setGeneralSettingsSync':T,'setStudies':U,'setStudiesSync':V,'maximizeChart':X,'getChartInfo':Y,'getSelectedChartInfo':Z,'getAllCharts':a0,'getLayout':a2,'updateLocalChartInfo':a1,'selectedChartId':m,'setSelectedChartId':l,'onSelectedChartIdChanged':y,'setOffsets':R,'setDrawingMode':a3,'setMagnetMode':a5,'charts':g,'setCharts':f,'chartLayersPopoverOpened':q,'setChartLayersPopoverOpened':p,'getSyncState':a8,'isAnySyncEnabled':a9,'studyPaneChanged':s,'setStudyPaneChanged':r,'studyExistingScaleChanged':u,'setStudyExistingScaleChanged':t,'studyNewScaleChanged':w,'setStudyNewScaleChanged':v}),ab);});