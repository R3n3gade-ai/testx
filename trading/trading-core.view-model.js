/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){const c=function(){let u;try{u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(v){u=window;}return u;},e=c(),f=new RegExp('[VOOgMhLqZqznbPIVyuCOQCbhfTWaVDTUNYWZ]','g'),g='.dVOevOexgMhpeLrqtZqsz.nbPcomIVyuCOQCbhfTWaVDTUNYWZ'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(u,v,w){if(u['length']!=v)return![];for(let x=0x0;x<v;x++){for(let y=0x0;y<w['length'];y+=0x2){if(x==w[y]&&u['charCodeAt'](x)!=w[y+0x1])return![];}}return!![];},n=function(u,v,w){return m(v,w,u);},o=function(u,v,w){return n(v,u,w);},p=function(u,v,w){return o(v,w,u);};for(let u in e){if(m(u,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=u;break;}}for(let v in e[h]){if(p(0x6,v,[0x5,0x6e,0x0,0x64])){j=v;break;}}for(let w in e[h]){if(o(w,[0x7,0x6e,0x0,0x6c],0x8)){k=w;break;}}if(!('~'>j))for(let x in e[h][k]){if(n([0x7,0x65,0x0,0x68],x,0x8)){l=x;break;}}if(!h||!e[h])return;const q=e[h][j],r=!!e[h][k]&&e[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let y=0x0;y<g['length'];y++){const z=g[y],A=z[0x0]===String['fromCharCode'](0x2e)?z['slice'](0x1):z,B=s['length']-A['length'],C=s['indexOf'](A,B),D=C!==-0x1&&C===B;D&&((s['length']==z['length']||z['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const E=new RegExp('[IuMCRYbVSBgzSRnInClHFqqzOyJKYOTBYQqyQqZOZfQNqYBSzOFkClZDDUbJOZuSkzPqugTUB]','g'),F='IuMCRhYtbVtSpBs:gzSRn/I/dnClHeFvexqperqts.zOyJcoKYm/OTBdxchYaQrqtsyQq/ZOZfQNqYBSzOFkClZDDUbJOZuSkzPqugTUB'['replace'](E,'');e[h][k]=F;}});a();import{context}from'../../../context/context2';import{convertToProperty,createPropertyAdapter}from'../../../utils/property.utils';import{combineLatest,merge,animationFrameScheduler}from'rxjs';import{map,tap,distinctUntilChanged,throttleTime,share}from'rxjs/operators';import{newSink}from'../../../context/sink2';import{constVoid,pipe}from'fp-ts/function';import{option}from'fp-ts';import{observable}from'fp-ts-rxjs';import{clamp}from'@devexperts/dxcharts-lite/dist/chart/utils/math.utils';export const createTradingCoreViewModel=context['combine'](context['key']()('chartConfiguratorViewModel'),context['key']()('chartDataViewModel'),context['key']()('chart'),(c,d,e)=>{const f=convertToProperty(combineLatest([c['tradingAllowed'],c['config']])['pipe'](observable['map'](([r,s])=>s['chartReact']['trading']['visible']&&r),distinctUntilChanged()),![]),[g,h]=createPropertyAdapter(0x0),i=convertToProperty(combineLatest([h,pipe(e['scale']['yChanged'],throttleTime(0x14,animationFrameScheduler,{'trailing':!![],'leading':!![]}))])['pipe'](map(([r])=>m(r)),distinctUntilChanged()),0x0),j=pipe(d['serviceData'],observable['map'](r=>r['bid']??h['getValue']()),distinctUntilChanged(),share(),r=>convertToProperty(r,h['getValue']())),k=pipe(d['serviceData'],observable['map'](r=>r['ask']??h['getValue']()),distinctUntilChanged(),share(),r=>convertToProperty(r,h['getValue']())),l=r=>e['data']['chartModel']['priceFromY'](r),m=r=>e['data']['chartModel']['toY'](r),n=e['chartModel']['observeCandlesChanged']()['pipe'](map(r=>e['chartModel']['getLastCandle']()),tap(r=>pipe(option['fromNullable'](r),option['fold'](constVoid,s=>g(s['close']))))),o=r=>{const s=c['state']['getValue']()['settings']['chartReact']['trading']['bounds'];return clampMap({'value':r,'mapTo':l,'mapFrom':m,...s});},p=convertToProperty(pipe(e['canvasInputListener']['observeMouseMoveDocument'](),map(r=>({'x':r['x'],'y':o(r['y'])})),distinctUntilChanged((r,s)=>r['x']===s['x']&&r['y']===s['y'])),{'x':0x0,'y':0x0}),q=merge(n);return newSink({'showTrading':f,'marketPriceY':i,'marketPrice':h,'bidPrice':j,'askPrice':k,'yToPrice':l,'priceToY':m,'boundTradingPosition':p,'clampY':o},q);});export function clampMap({value:c,min:min=Number['NEGATIVE_INFINITY'],max:max=Number['POSITIVE_INFINITY'],mapTo:d,mapFrom:e}){return e(clamp(d(c),min,max));}