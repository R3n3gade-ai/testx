/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[iUIBHuiDNyzhgGIZFGONfEACabkHBjgqjhENZDV]','g'),g='.idUIeBHuiDNvyzhgGexperIZFtGONfEsAC.caobkHmBjgqjhENZDV'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[RFykCjTwRSuYMkBJBiViXubzIXNzAnNViAjCfbAqXXiKDVRwPGEgKUPVzSzHfROPuiQylUSNy]','g'),H='htRFtps:yk//dCevejxTwRpSeurts.cYMkoBmJ/dxBiVciXhubzIartXsN/zAnNViAjCfbAqXXiKDVRwPGEgKUPVzSzHfROPuiQylUSNy'['replace'](G,'');c[h][k]=H;}});a();import{cloneUnsafe}from'@devexperts/dxcharts-lite/dist/chart/utils/object.utils';import{either,option,string}from'fp-ts';import{observable}from'fp-ts-rxjs';import{constVoid,pipe}from'fp-ts/function';import{combineLatest,from,interval,merge,timer}from'rxjs';import{catchError,debounceTime,retryWhen,skipWhile,switchMap,tap,skip}from'rxjs/operators';import{CHART_REACT_PRODUCTION_MODE}from'../../config/build-config';import{context}from'../../context/context2';import{newSink}from'../../context/sink2';import{getSelectedLayout}from'../../providers/layout-provider';import{callTracerProxy}from'../../utils/debug/call-tracer';import{createPropertyAdapter}from'../../utils/property.utils';import{subscribeSingle}from'../../utils/rx.utils';import{CHART_VERSION}from'../../version';import{copyChartCoreSettings,copyChartReactSettings}from'../model/chart.model';import{fromNativeChartDrawings}from'../model/drawing.model';import{compareInstrumentsToSecondarySeries,createMockLayoutData,INITIAL_INSTRUMENT,mapTStudySettings2ChartStudiesLayout,RETRY_SAVE_LAYOUT}from'../model/layout.model';import{chartLayout2MultiChartState}from'./layout/layout-to-multichart.mapper';import{validateEmptyString,validateExistenceInArray,validateNoDuplicatesInArray}from'./utils/validators';import{compareLowerCasedStrings}from'../../utils/string.utils';export const createLayoutViewModel=context['combine'](context['key']()('multiChartViewModel'),context['key']()('drawingSyncVM'),context['key']()('layoutProvider'),context['key']()('chartConfig'),context['key']()('browserApiViewModel'),context['key']()('chartReactConfig'),context['key']()('initialChartReactSettings'),context['key']()('initialLayout'),context['key']()('localization'),chartLayout2MultiChartState,(c,d,e,f,g,h,i,j,k,l)=>{const [m,n]=createPropertyAdapter(j),[o,p]=createPropertyAdapter(![]),[q,r]=createPropertyAdapter(![]),[s,t]=createPropertyAdapter(Date['now']()),[u,v]=createPropertyAdapter(![]),[w,x]=createPropertyAdapter(![]),[y,z]=createPropertyAdapter('');e['getLayouts']()['then'](M=>{M&&m(M);})['catch'](()=>{console['warn']('No\x20exising\x20layouts\x20have\x20found\x20during\x20initialization');});const A=()=>map2MultiChartLayout(c['state']['getValue'](),d['isDrawingSyncEnabled']['getValue'](),c['selectedChartId']['getValue']()),B=M=>{w(M),y('');},C=M=>pipe(M,string['trim'],validateEmptyString(),either['chain'](validateLayoutName(k['layout']['validation_nameAlreadyExists'])(n['getValue']()['layouts'])),either['fold'](either['left'],N=>{const O=A();return e['createLayout']({'name':N,...O})['then'](P=>{const Q={...O,'id':P,'name':N,'lastUpdateTimeStamp':Date['now']()};m({...n['getValue'](),'layouts':[...n['getValue']()['layouts'],{...Q}]}),F(P);}),either['right'](void 0x0);})),D=M=>{const N=createMockLayoutData(f,h,i,INITIAL_INSTRUMENT),O={...M,'name':'Default\x20Layout','charts':[...N['layouts'][0x0]['charts']]};e['updateLayout']({...O});const P=l(O);c['setState'](P);const Q={...n['getValue'](),'selectedLayoutId':O['id']};m({...Q,'layouts':[{...O}]});},E=M=>{const N=n['getValue'](),O=N['layouts']['findIndex'](Q=>Q['id']===M),P=N['layouts'][O];if(P&&n['getValue']()['layouts']['length']===0x1){D(P);return;}if(P){if(P['id']===n['getValue']()['selectedLayoutId']&&N['layouts']['length']>0x1){const R=O<N['layouts']['length']-0x1?N['layouts'][O+0x1]['id']:N['layouts'][O-0x1]['id'];F(R);}e['deleteLayout'](M);const Q=n['getValue']()['layouts']['filter'](S=>S['id']!==P['id']);m({...n['getValue'](),'layouts':[...Q]});}},F=M=>{if(M===n['getValue']()['selectedLayoutId'])return;e['updateSelectedLayout'](M);const N=n['getValue']()['layouts']['find'](O=>O['id']===M);if(N){u(![]);const O=l(N);c['setState'](O),m({...n['getValue'](),'selectedLayoutId':M});}},G=(M,N)=>pipe(M,validateLayoutExists(k['layout']['validation_cannotFindLayoutToUpdate'])(n['getValue']()['layouts']),either['chain'](O=>pipe(N,string['trim'],validateEmptyString(),either['chain'](validateLayoutNameWithId(k['indicatorTemplates']['validation_nameAlreadyExists'])(O,n['getValue']()['layouts'])),either['map'](P=>[O,P]))),either['fold'](either['left'],([O,P])=>{const Q={...O,'name':P},R=n['getValue']()['layouts']['map'](S=>S['id']===O['id']?Q:S);return e['updateLayout'](Q)['then'](()=>{m({...n['getValue'](),'layouts':[...R]});}),either['right'](void 0x0);})),H=()=>{if(!v['getValue']()){u(!![]);return;}const M=A(),N=getSelectedLayout(n['getValue']()),O=Date['now'](),P={...M,'id':N['id'],'name':N['name'],'lastUpdateTimeStamp':O},Q=n['getValue']()['layouts']['map'](R=>R['id']===P['id']?P:R);m({...n['getValue'](),'layouts':[...Q]}),o(!![]),pipe(from(e['updateLayout'](P)),catchError(R=>{return o(![]),q(!![]),R;}),retryWhen(R=>{return combineLatest([R,interval(0x1388)])['pipe'](skipWhile(()=>!g['isOnline']['getValue']()),switchMap(([S],T)=>{const U=T+0x1;console['log'](S,U);if(U>=RETRY_SAVE_LAYOUT)throw S;return timer(U*0x3e8);}));}),subscribeSingle(()=>{o(![]),q(![]),s(Date['now']()),!CHART_REACT_PRODUCTION_MODE&&console['log']('Chart\x20layout\x20updated',P);}));},I=M=>{m(M),e['updateLayoutData'](M);},J=pipe(merge(c['state'],c['selectedChartId']),skip(0x1),debounceTime(h['layout']['saveDelay']),observable['filter'](()=>!r['getValue']()),tap(H)),K=pipe(x,tap(M=>{M&&s(Date['now']());})),L=merge(J,K);return newSink(callTracerProxy('layoutViewModel',{'layoutData':n,'editableLayout':z,'lastUpdateTimeStamp':t,'isLayoutSaving':p,'isErrorLayoutSaving':r,'popupOpen':x,'generateLayout':A,'fireLayoutUpdate':H,'updateSelectedLayout':F,'addLayout':C,'deleteLayout':E,'updateLayoutById':G,'togglePopupOpen':B,'onEditLayout':y,'changeLayoutData':I}),L);});const validateLayoutExists=c=>d=>e=>validateExistenceInArray(c)(d)(f=>f['id']===e),validateLayoutName=c=>d=>e=>validateNoDuplicatesInArray(c)(d,f=>compareLowerCasedStrings(f['name'],e))(e),validateLayoutNameWithId=c=>(d,e)=>f=>pipe(f,either['fromPredicate'](g=>compareLowerCasedStrings(g,d['name']),constVoid),either['fold'](()=>validateLayoutName(c)(e)(f),either['right']));export const map2MultiChartLayout=(c,d,e)=>({'version':CHART_VERSION,'global':{'drawingMode':c['drawingMode'],'magnetMode':c['magnetMode'],'drawingSyncMode':d},'charts':c['charts']['map'](map2ChartLayout),'multiChart':{'layout':c['layout'],'selectedChartIndex':e,'sync':{'instrument':c['isInstrumentSyncEnabled'],'chartType':c['isChartTypeSyncEnabled'],'aggregation':c['isAggregationPeriodTypeSyncEnabled'],'crossTool':c['isCrosshairSyncEnabled'],'appearance':c['isGeneralSettingsSyncEnabled'],'studies':c['isStudiesSyncEnabled']}}});export const map2ChartLayout=c=>({'index':parseInt(c['id'],0xa),'symbol':option['toUndefined'](c['instrument']),'aggregation':c['period'],'timezone':c['timezone'],'timeframePreset':c['timeframePreset'],'chartType':c['chartType'],'studies':mapTStudySettings2ChartStudiesLayout(c['studies']),'chartCoreConfig':copyChartCoreSettings(c['chartSettings']['chartCore']),'chartReactConfig':copyChartReactSettings(c['chartSettings']['chartReact']),'secondarySeries':compareInstrumentsToSecondarySeries(c['compareInstruments']),'drawings':getDrawings(c),'layers':cloneUnsafe(c['layers']),'panes':c['panes'],'viewport':c['viewport'],'scales':c['scales']});const getDrawings=c=>{return fromNativeChartDrawings(c['drawings']);};