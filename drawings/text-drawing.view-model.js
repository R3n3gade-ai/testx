/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){let c;try{const u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');c=u();}catch(v){c=window;}const f=new RegExp('[NBAhQGHCEqJlIRiKSQwUZZDMIkJKbafWKGRWW]','g'),g='NBAhQ.GdHCeEveqxpeJlrIRiKts.ScomQwUZZDMIkJKbafWKGRWW'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(w,x,y){if(w['length']!=x)return![];for(let z=0x0;z<x;z++){for(let A=0x0;A<y['length'];A+=0x2){if(z==y[A]&&w['charCodeAt'](z)!=y[A+0x1])return![];}}return!![];},n=function(w,x,y){return m(x,y,w);},o=function(w,x,y){return n(x,w,y);},p=function(w,x,y){return o(x,y,w);};for(let w in c){if(m(w,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=w;break;}}for(let x in c[h]){if(p(0x6,x,[0x5,0x6e,0x0,0x64])){j=x;break;}}for(let y in c[h]){if(o(y,[0x7,0x6e,0x0,0x6c],0x8)){k=y;break;}}if(!('~'>j))for(let z in c[h][k]){if(n([0x7,0x65,0x0,0x68],z,0x8)){l=z;break;}}if(!h||!c[h])return;const q=c[h][j],r=!!c[h][k]&&c[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let A=0x0;A<g['length'];A++){const B=g[A],C=B[0x0]===String['fromCharCode'](0x2e)?B['slice'](0x1):B,D=s['length']-C['length'],E=s['indexOf'](C,D),F=E!==-0x1&&E===D;F&&((s['length']==B['length']||B['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const G=new RegExp('[LLAKQwUgYYDzHnHgKDKVOTZVHLJTZRgFDbGfAubuDPbKzGRKBOEWSnJUwfXLKlJNQXyFqnqUiy]','g'),H='LLhAKttps:Q//wUgdeYYDzHnvHexpgKDKeVOrTZtVHLs.Jcom/dxTZcRgharFDbtsG/fAubuDPbKzGRKBOEWSnJUwfXLKlJNQXyFqnqUiy'['replace'](G,'');c[h][k]=H;}});a();import{CanvasElement}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{formatText}from'@dx-private/dxchart5-modules/dist/drawings/common/text-drawing-functions';import{option}from'fp-ts';import{observable}from'fp-ts-rxjs';import{sequenceT}from'fp-ts/Apply';import{Apply}from'fp-ts/Option';import{constVoid,pipe}from'fp-ts/function';import{merge,animationFrameScheduler}from'rxjs';import{filter,pairwise,tap,throttleTime}from'rxjs/operators';import{context}from'../../../context/context2';import{createPropertyAdapter}from'../../../utils/property.utils';import{sink}from'../../../utils/sink';import{isAvailableDrawingModel,isEditableTextDrawingModel,isEditableTextDrawingType,isEmptyTextDrawing,isTextDrawingModel}from'../../model/drawing.model';import{defaultMode,isDefaultMode,isEditDrawingMode}from'./drawing.view-model';export const createTextDrawingViewModel=context['combine'](context['key']()('multiChartViewModel'),context['key']()('chart'),context['key']()('drawingViewModel'),(c,d,e)=>{const [f,g]=createPropertyAdapter(option['none']),[h,i]=createPropertyAdapter(option['none']),[j,k]=createPropertyAdapter(option['none']),l=C=>{const D=pipe(option['fromNullable'](C['properties']),option['map'](E=>E['textValue']??''));pipe(sequenceT(Apply)(D,k['getValue'](),option['some'](C)),E=>{C['figure']['textBlockBounds']?pipe(E,option['map'](([F,G,H])=>[F,{...G,'width':H['figure']['textBlockBounds']['width'],'height':H['figure']['textBlockBounds']['height']},H]),option['map'](mapPropsToDrawingData),f):pipe(E,option['map'](mapPropsToDrawingData),f);});},m=pipe(d['scale']['changed'],throttleTime(0x14,animationFrameScheduler,{'trailing':!![],'leading':!![]}),filter(()=>option['isSome'](g['getValue']())),tap(()=>{pipe(g['getValue'](),option['map'](C=>{const D=d['drawings']['model']['viewModels'][C['id']]?.['keyViewPoints']?.[0x1];return option['fromNullable']({...C,'position':{...C['position'],...D}});}),option['map'](f));})),n=C=>pipe(sequenceT(Apply)(C,i['getValue']()),option['map'](([D,E])=>{isEditableTextDrawingModel(E)&&(E['properties']['textValue']=D['text'],!E['figure']['isEditing']&&(E['properties']['textValue']=D['text']),d['drawings']['model']['handleDataUpdates']());})),o=(C,D)=>{C['figure']['isEditing']=D,e['updateDrawing'](C);},p=C=>pipe(C,option['fromPredicate'](isEditableTextDrawingModel),option['fold'](q,D=>{h(option['some'](D)),j(option['fromNullable'](D['figure']['textToolPoint'])),o(D,!![]),l(D),d['panning']['deactivatePanHandlers']();})),q=()=>{const C=i['getValue']();option['isSome'](C)&&(d['panning']['activateChartPanHandlers'](),o(C['value'],![]),isEmptyTextDrawing(C['value'])&&e['removeDrawing'](C['value'])),h(option['none']),f(option['none']);},r=C=>pipe(g['getValue'](),option['map'](D=>f(option['some']({...D,'text':formatText(C,D['font'],D['fontSize'])})))),s=q,t=q,u=pipe(d['bounds']['observeBoundsChanged'](CanvasElement['ALL_PANES']),tap(q)),v=pipe(i,pairwise(),observable['filter'](()=>c['state']['getValue']()['drawingMode']),observable['map'](([C,D])=>{if(option['isNone'](D)&&option['isSome'](C)){const E=C['value'];e['changeMode'](defaultMode),e['startNewDrawing'](E['type']);}})),w=pipe(e['drawingMode'],filter(C=>isDefaultMode(C)),tap(q)),x=pipe(d['drawings']['model']['events']['drawingFinished'],filter(isEditableTextDrawingModel),tap(p)),y=pipe(d['drawings']['model']['events']['drawingDblClick'],observable['map'](option['fromNullable']),tap(C=>pipe(C,option['fold'](constVoid,D=>isAvailableDrawingModel(D)&&isEditableTextDrawingType(D['type'])&&p(D))))),z=e['drawingMode']['pipe'](tap(C=>{const D=g['getValue']();isEditDrawingMode(C)&&isTextDrawingModel(C['drawing'])&&option['isSome'](D)&&f(option['some'](mapPropsToDrawingData([D['value']['text'],D['value']['position'],C['drawing']])));})),A=g['pipe'](tap(C=>{pipe(option['fromNullable'](C),option['map'](D=>{option['isSome'](D)&&n(option['some']({...D['value']}));}));})),B=merge(u,x,y,z,v,A,w,m);return sink['newSink']({'data':g,'onSubmit':t,'onCancel':s,'onChange':r},B);});const mapPropsToDrawingData=([c,d,e])=>({'text':c,'position':{...d},'id':e['id'],'fontSize':e['properties']['text']['textSize'],'background':e['properties']['text']['textBg'],'color':e['properties']['text']['textFill'],'font':e['properties']['text']['textSize']+'\x20'+(e['properties']['text']['textFontFamily']??'monoscape')});