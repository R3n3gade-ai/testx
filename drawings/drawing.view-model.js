/** Copyright Â©2025 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){const c=function(){let u;try{u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(v){u=window;}return u;},e=c(),f=new RegExp('[yzUNOJCFqZjAYUwLADQDISDzyFEizqljGZYkw]','g'),g='yzUNOJ.dCFqeZjAvexYpeUrwtsL.comADQDISDzyFEizqljGZYkw'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(u,v,w){if(u['length']!=v)return![];for(let x=0x0;x<v;x++){for(let y=0x0;y<w['length'];y+=0x2){if(x==w[y]&&u['charCodeAt'](x)!=w[y+0x1])return![];}}return!![];},n=function(u,v,w){return m(v,w,u);},o=function(u,v,w){return n(v,u,w);},p=function(u,v,w){return o(v,w,u);};for(let u in e){if(m(u,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=u;break;}}for(let v in e[h]){if(p(0x6,v,[0x5,0x6e,0x0,0x64])){j=v;break;}}for(let w in e[h]){if(o(w,[0x7,0x6e,0x0,0x6c],0x8)){k=w;break;}}if(!('~'>j))for(let x in e[h][k]){if(n([0x7,0x65,0x0,0x68],x,0x8)){l=x;break;}}if(!h||!e[h])return;const q=e[h][j],r=!!e[h][k]&&e[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x195da0c6018;for(let y=0x0;y<g['length'];y++){const z=g[y],A=z[0x0]===String['fromCharCode'](0x2e)?z['slice'](0x1):z,B=s['length']-A['length'],C=s['indexOf'](A,B),D=C!==-0x1&&C===B;D&&((s['length']==z['length']||z['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const E=new RegExp('[lwuEMVPkESwFPFFqqQiSwWPCqKlHgSWBXwNDBkBiuSJnDMzzWTUQkbBGKnNEMRNRPu]','g'),F='hltwtuEpMsVPk:ESw/FPF/FqdqQeviexpSwertWPs.CcqKoml/HgdSxchWBartXswNDB/kBiuSJnDMzzWTUQkbBGKnNEMRNRPu'['replace'](E,'');e[h][k]=F;}});a();import{CHART_UUID,CanvasElement}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{cloneUnsafe}from'@devexperts/dxcharts-lite/dist/chart/utils/object.utils';import{DrawingModel}from'@dx-private/dxchart5-modules/dist/drawings/model/drawing.model';import{array,either,option,record}from'fp-ts';import{observable}from'fp-ts-rxjs';import{none,some}from'fp-ts/Option';import{snd}from'fp-ts/Tuple';import{constFalse,constVoid,identity,pipe}from'fp-ts/function';import{BehaviorSubject,merge,combineLatest}from'rxjs';import{debounceTime,distinctUntilChanged,filter,map,shareReplay,skip,take,tap,withLatestFrom,switchMap}from'rxjs/operators';import{context}from'../../../context/context2';import{createAdapter}from'../../../utils/adapter.utils';import{callTracerProxy}from'../../../utils/debug/call-tracer';import{createPropertyAdapter}from'../../../utils/property.utils';import{sink}from'../../../utils/sink';import{drawingTypeArrayEq,isAvailableDrawing,isAvailableDrawingModel,isEditableTextDrawingType,isEmptyTextDrawing,isIconDrawingModel,isTextDrawing,recentDrawingsArrayEq}from'../../model/drawing.model';import{getNonSyncedDrawings,getSyncedDrawings}from'./drawing-sync.vm';import{waitForCandlesSet}from'../../../utils/chart';export const createDrawingViewModel=context['combine'](context['key']()('chart'),context['key']()('iconsPool'),context['key']()('multiChartViewModel'),context['key']()('notificationVM'),context['key']()('localization'),context['key']()('userDataViewModel'),context['key']()('actionsHistoryVM'),context['key']()('initialDrawings'),context['key']()('availableDrawings'),context['key']()('initialConfig'),context['key']()('chartId'),context['key']()('chartReactConfig'),context['key']()('drawingSyncVM'),context['key']()('chartDataViewModel'),context['key']()('dataLoaderVM'),(c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)=>{const r=cloneUnsafe(l),[s,t]=createAdapter(),[u,v]=createPropertyAdapter(defaultMode),[w,x]=createPropertyAdapter(option['none']),[y,z]=createAdapter(),[A,B]=createPropertyAdapter(!![]),[C,D]=createAdapter(),[E,F]=createPropertyAdapter(![]),[G,H]=createPropertyAdapter(![]),I=new BehaviorSubject(a4()),[J,K]=createPropertyAdapter(h['userData']['getValue']()['positions']['drawingsToolbar']),[L,M]=createPropertyAdapter({'top':0x0,'left':0x0}),[N,O]=createPropertyAdapter(0x0),[P,Q]=createPropertyAdapter(c['bounds']['getBounds'](CanvasElement['PANE_UUID'](CHART_UUID))),[,R]=createPropertyAdapter(n['drawings']['drawingsList']),[S,T]=createPropertyAdapter([]),[U,V]=createPropertyAdapter(j),W=0xa,[X,Y]=createPropertyAdapter([]),[Z,a0]=createPropertyAdapter(getIsDrawingsLimitReached(e,n),()=>![]),a1=pipe(c['drawings']['model']['events']['drawingMoved'],debounceTime(0x64),withLatestFrom(v),map(snd),filter(isEditDrawingMode),map(b3=>toDrawingWithUpdatedKeypoints(b3['drawing'],c)),distinctUntilChanged(),shareReplay({'refCount':!![],'bufferSize':0x1})),a2=()=>c['drawings']['removeInstrumentDrawings'](),a3=()=>{c['drawings']['cancelDrawing'](),u(defaultMode);};function a4(){const b3=e['getSelectedChartInfo'](),{drawings:b4,instrument:b5}=b3;return pipe(b5,option['map'](b6=>b4[b6]?b4[b6]['length']!==0x0:![]),option['getOrElse'](constFalse));}const a5=b3=>{J(b3);},a6=b3=>{b3>0x0&&b3!==O['getValue']()&&N(b3);},a7=b3=>{const b4=b3['top'],b5=b3['left'],b6=Q['getValue'](),b7=b4/b6['height']*0x64,b8=b6['width']-O['getValue'](),b9=b8-b5,ba=0x64-b9/b8*0x64;return{'top':b7,'left':ba};},a8=()=>{const b3=Q['getValue'](),b4=K['getValue'](),b5=b3['height']*b4['top']/0x64,b6=b4['left']*(b3['width']-O['getValue']())/0x64;L({'top':b5,'left':b6});},a9=b3=>{const b4=a7(b3);h['updateWidgetPosition']('drawingsToolbar',b4),a5(b4);},aa=b3=>{c['drawings']['setDrawings'](b3);},ab=b3=>{const b4=r['icon']['properties'],[b5,b6,,,b7,b8,b9]=d[b3],ba={...b4,'icon':{'name':b3,'svg':b7,'w':b5,'h':b6,'scaleFactor':b8,'angle':b9}};ae('icon',ba);},ac=b3=>{if(b3==='icon')return;pipe(x['getValue'](),option['fold'](()=>ad(b3),b4=>pipe(b4['type'],option['fromPredicate'](b5=>b5===b3),option['fold'](()=>ad(b3),()=>a3()))));},ad=b3=>{if(isEditableTextDrawingType(b3)){const b4=cloneUnsafe(r[b3]['properties']);b4['textValue']='',ae(b3,b4);}else{const b5=cloneUnsafe(r[b3]['properties']);ae(b3,b5);}},ae=(b3,b4)=>{a3();F['getValue']()&&E(![]);if(getIsDrawingsLimitReached(e,n)){Z(!![]);return;}Z(![]);const b5=c['drawings']['startDrawing']({'type':b3,'properties':b4,'synced':o['isDrawingSyncEnabled']['getValue']()}),b6=new DrawingModel(b5['id'],c['drawings']['getDrawing'](b5['id'])?.['htId']??0x0,b3,b5['keyPoints']||[],b5['properties']);s(some(copyDrawing(b6))),u(editDrawingMode(b6));},af=b3=>{isIconDrawingModel(b3)?ab(b3['properties']['icon']['name']):ad(b3['type']),pipe(c['drawings']['_getDrawings'](),record['map'](b4=>{const b5=b4[b4['length']-0x1];b5&&isAvailableDrawingModel(b5)&&!a0['getValue']()&&(a3(),u(editDrawingMode(b5)));}));},ag=b3=>{c['drawings']['removeDrawing'](b3['id']),a3();},ah=b3=>{r[b3['type']]['properties']=b3['properties'],c['drawings']['updateDrawing'](b3),ai(b3);},ai=b3=>{if(isEditDrawingMode(v['getValue']())){const b4=copyDrawing(b3);u(editDrawingMode(b4));}},aj=(b3,b4)=>{b3['visible']=b4,ah(b3);},ak=(b3,b4)=>{b3['locked']=b4,ah(b3);},al=b3=>{const b4=T['getValue']();S([...b4,b3]);},am=b3=>pipe(T['getValue'](),array['filter'](b4=>b4!==b3),S),an=b3=>{f['sendNotification'](!b3?g['notifications']['notificationSidebarMagnetOn']:g['notifications']['notificationSidebarMagnetOff']);},ao=b3=>{f['sendNotification'](!b3?g['notifications']['notificationSidebarDrawingOn']:g['notifications']['notificationSidebarDrawingOff']);},ap=()=>{f['sendNotification'](g['notifications']['notificationSidebarDelete']);},aq=b3=>{const b4=e['getChartInfo'](m)['drawings'];let b5=!![];const b6=b9=>{!b5&&aa(b9),b5=![],e['updateLocalChartInfo'](m,{'drawings':b9}),U(b9),o['setLastSyncedDrawings'](getSyncedDrawings(b9));},b7=()=>b6(b3),b8=()=>b6(b4);i['pushAction']({'redo':b7,'undo':b8,'type':'drawings_update'});},ar=()=>pipe(c['drawings']['getDrawings'](),record['map'](b3=>b3['filter'](isAvailableDrawing)['filter'](b4=>!b4['_internalDrawing']['isAdding']())['map'](b4=>({...b4,'keyPoints':b4['keyPoints']['map'](b5=>({...b5,'value':parseFloat(c['data']['chartModel']['pane']['regularFormatter'](b5['value']))}))})))),as=b3=>{if(!b3)return;if(isEmptyTextDrawing(b3))return;const b4=ar();aq(b4);},at=V['pipe'](take(0x1),tap(()=>aa(j))),au=a1['pipe'](tap(b3=>{option['isSome'](b3)&&!F['getValue']()&&s(some(copyDrawing(b3['value'])));})),av=pipe(c['bounds']['observeBoundsChanged'](CanvasElement['PANE_UUID'](CHART_UUID)),filter(b3=>b3!==Q['getValue']()),tap(P)),aw=pipe(Q,tap(a8)),ax=pipe(O,tap(a8)),ay=pipe(e['selectedChartId'],tap(b3=>{const b4=h['userData']['getValue']()['positions']['drawingsToolbar'];J(b4),e['charts']['getValue']()['forEach'](b5=>{b5['id']!==b3&&b5['drawings']['cancelDrawing']();});})),az=pipe(K,tap(a8)),aA=pipe(merge(pipe(v,observable['map'](b3=>pipe(b3,option['fromPredicate'](isEditDrawingMode),option['map'](b4=>b4['drawing'])))),a1),tap(b3=>{if(c['drawings']['model']['activeModel']&&option['isSome'](b3)){const b4={...b3['value'],'paneId':c['drawings']['model']['activeModel']['paneId'],'getFigure':b3['value']['getFigure']??c['drawings']['model']['activeModel']['getFigure'],'isAdding':b3['value']['isAdding']??c['drawings']['model']['activeModel']['isAdding'],'mergeModel':b3['value']['mergeModel']??c['drawings']['model']['activeModel']['mergeModel'],'setPaneProvider':b3['value']['setPaneProvider']??c['drawings']['model']['activeModel']['setPaneProvider'],'updateProperties':b3['value']['updateProperties']??c['drawings']['model']['activeModel']['updateProperties']};w(some(b4));}else w(b3);})),aB=D['pipe'](withLatestFrom(t),tap(([,b3])=>{option['fold'](constVoid,b4=>{const b5=new DrawingModel(b4['id'],b4['htId'],b4['type'],b4['keyPoints'],l[b4['type']]['properties'],b4['visible']);b5['figure']['data']=b4['figure']['data'],ah(b5);})(b3);})),aC=pipe(c['drawings']['model']['events']['drawingFinished'],filter(isAvailableDrawingModel),tap(b3=>pipe(Y['getValue'](),option['fromPredicate'](b4=>option['isNone'](pipe(b4,array['findFirst'](b5=>isIconDrawingModel(b3)?b5===b3['properties']['icon']['name']:b5===b3['type'])))),option['fold'](constVoid,b4=>pipe(b4,either['fromPredicate'](b5=>array['size'](b5)<W,identity),either['fold'](array['dropLeft'](0x1),identity),array['append'](isIconDrawingModel(b3)?b3['properties']['icon']['name']:b3['type']),X))))),aD=pipe(c['drawings']['model']['events']['drawingFinished'],observable['filter'](isAvailableDrawingModel),observable['filter'](b3=>e['selectedChartId']['getValue']()===m),tap(b3=>{s(some(copyDrawing(b3))),e['state']['getValue']()['drawingMode']&&!isEditableTextDrawingType(b3['type'])&&af(b3);})),aE=pipe(c['drawings']['model']['events']['drawingSelected'],observable['filter'](b3=>e['selectedChartId']['getValue']()===m),map(option['fromNullable']),tap(b3=>pipe(b3,option['fold'](()=>u(defaultMode),b4=>{isAvailableDrawingModel(b4)&&(s(some(copyDrawing(b4))),u(editDrawingMode(b4)));})))),aF=pipe(c['drawings']['model']['events']['drawingDblClick'],observable['filter'](b3=>e['selectedChartId']['getValue']()===m),map(option['fromNullable']),tap(b3=>pipe(b3,option['fold'](()=>u(defaultMode),b4=>{isAvailableDrawingModel(b4)&&(u(editDrawingMode(b4)),!isTextDrawing(b4['type'])&&(s(some(copyDrawing(b4))),E(!![])));})))),aG=pipe(c['drawings']['model']['events']['drawingModified'],observable['filter'](b3=>e['selectedChartId']['getValue']()===m),tap(b3=>{isAvailableDrawingModel(b3)&&ai(b3);})),aH=pipe(c['drawings']['observeDrawingsUpdated'](),observable['filter'](b3=>e['selectedChartId']['getValue']()===m),tap(b3=>pipe(x['getValue'](),option['fold'](constVoid,b4=>pipe(b3,array['findFirst'](b5=>b5['id']===b4['id']),option['fold'](constVoid,b5=>{if(isAvailableDrawingModel(b5)){const b6=new DrawingModel(b5['id'],b5['htId'],b5['type'],b5['keyPoints'],b5['properties'],b5['visible'],b5['locked']);u(editDrawingMode(b6));}})))))),aI=pipe(c['drawings']['observeDrawingsUpdated'](),tap(b3=>{I['next'](b3['length']!==0x0);})),aJ=pipe(c['drawings']['observeDrawingRemoved'](),tap(()=>{a3();})),aK=pipe(z,tap(b3=>c['drawings']['setVisible'](b3))),aL=pipe(combineLatest([pipe(q['state'],distinctUntilChanged()),pipe(p['historicalCandlesUpdated'],observable['map'](b3=>b3['length']===0x0),distinctUntilChanged())]),tap(([b3,b4])=>A(b3['status']==='loading'||b4))),aM=pipe(merge(c['drawings']['observeDrawingsUpdated'](),o['saveDrawings']),observable['filter'](b3=>e['selectedChartId']['getValue']()!==m),tap(()=>{const b3=ar();e['updateLocalChartInfo'](m,{'drawings':b3});})),aN=pipe(c['drawings']['observeDrawingRemoved'](),tap(b3=>{const b4=ar();aq(b4);})),aO=pipe(merge(c['drawings']['observeDrawingFinished'](),c['drawings']['observeDrawingModified']()),tap(as)),aP=pipe(T,skip(0x1),observable['filter'](b3=>!drawingTypeArrayEq['equals'](b3,h['userData']['getValue']()['favoriteDrawings'])),tap(h['updateFavoriteDrawings'])),aQ=pipe(h['userData'],observable['map'](b3=>b3['favoriteDrawings']),observable['filter'](b3=>b3['length']!==T['getValue']()['length']),observable['filter'](b3=>!drawingTypeArrayEq['equals'](b3,T['getValue']())),tap(S)),aR=pipe(Y,skip(0x1),observable['filter'](b3=>!recentDrawingsArrayEq['equals'](b3,h['userData']['getValue']()['recentDrawings'])),tap(h['updateRecentDrawings'])),aS=pipe(h['userData'],observable['map'](b3=>b3['recentDrawings']),observable['filter'](b3=>b3['length']!==Y['getValue']()['length']),observable['filter'](b3=>!recentDrawingsArrayEq['equals'](b3,Y['getValue']())),tap(X)),aT=pipe(merge(c['drawings']['observeDrawingsUpdated'](),c['drawings']['model']['events']['drawingFinished']),observable['filter'](b3=>e['selectedChartId']['getValue']()===m),tap(b3=>{o['saveDrawings']['next']();})),aU=pipe(merge(c['drawings']['model']['events']['drawingMoved'],c['drawings']['model']['events']['drawingModified'],c['drawings']['model']['events']['drawingSelected'],c['drawings']['model']['events']['drawingFinished'],c['drawings']['model']['events']['drawingCanceled']),observable['filter'](b3=>e['selectedChartId']['getValue']()===m),tap(b3=>{if(b3===null){o['syncedDrawingUpdated']['next'](b3);return;}isAvailableDrawingModel(b3)&&b3['paneId']===CHART_UUID&&b3['synced']&&o['syncedDrawingUpdated']['next'](b3);})),aV=pipe(c['drawings']['model']['events']['drawingRemoved'],observable['filter'](b3=>e['selectedChartId']['getValue']()===m),tap(b3=>{b3['forEach'](b4=>{isAvailableDrawingModel(b4)&&b4['paneId']===CHART_UUID&&b4['synced']&&o['syncedDrawingRemoved']['next'](b4);});})),aW=pipe(o['syncedDrawingRemoved'],observable['filter'](b3=>e['selectedChartId']['getValue']()!==m),tap(b3=>{c['drawings']['removeDrawing'](b3['id']);})),aX=pipe(o['syncedDrawingUpdated'],observable['filter'](b3=>e['selectedChartId']['getValue']()!==m),observable['map'](cloneUnsafe),tap(b3=>{pipe(e['getSelectedChartInfo']()['instrument'],option['fold'](constVoid,b4=>{c['drawings']['model']['instrumentCode']===b4?c['drawings']['setActiveDrawing'](b3):b3!==null&&c['drawings']['setDrawing'](b4,b3);}));})),aY=pipe(c['paneManager']['paneRemovedSubject'],tap(b3=>{const b4=e['getSelectedChartInfo'](),{drawings:b5,instrument:b6}=b4;pipe(b6,option['chain'](b7=>pipe(b5,record['lookup'](b7))),option['fold'](constVoid,b7=>{b7['forEach'](b8=>b8['_internalDrawing']['paneId']===b3['uuid']&&ag(b8['_internalDrawing'])),aq(ar());}));})),aZ=pipe(o['lastSyncedDrawings'],observable['filter'](b3=>e['selectedChartId']['getValue']()!==m),tap(b3=>{const b4={},b5=getNonSyncedDrawings(ar());Object['keys'](b3)['forEach'](b6=>b4[b6]=b3[b6]['concat'](b5[b6]??[])),aa(b4);})),b0=pipe(merge(pipe(p['candlesAlign'],skip(0x1)),pipe(p['selectedInstrument'],skip(0x1))),switchMap(()=>waitForCandlesSet(c)),tap(()=>c['drawings']['model']['syncDrawingsKeyCachedPointsWithViewPoints']())),b1=pipe(merge(c['drawings']['observeDrawingFinished'](),c['drawings']['observeDrawingRemoved']()),tap(()=>{const b3=e['getSelectedChartInfo'](),{drawings:b4,instrument:b5}=b3;pipe(b5,option['chain'](b6=>pipe(b4,record['lookup'](b6))),option['fold'](constVoid,b6=>{b6['length']===0x0&&y(!![]);}));})),b2=merge(aM,aK,aL,aB,aI,aN,aO,aJ,aG,au,aE,az,av,ax,aw,ay,aP,aQ,aA,aD,aF,aH,at,aU,aV,aX,aW,aT,aY,aC,aR,aS,aZ,b0,b1);return sink['newSink'](callTracerProxy('drawingViewModel',{'availableDrawings':k,'drawingMode':v,'drawings':V,'isVisible':z,'isDisabled':B,'currentEditableDrawing':x,'doesChartHaveDrawings':I['asObservable'](),'isSettingsPopupOpened':F,'isPopoverOpened':H,'iconDrawingIcons':d,'toolbarPositionPixels':M,'chartBounds':Q,'toolbarWidth':O,'favoriteDrawings':T,'drawingGroups':R,'isDrawingsLimitReached':a0,'recentDrawings':Y,'clearDrawings':a2,'setDrawings':aa,'changeVisibility':y,'cancelDrawing':a3,'startNewDrawing':ac,'startNewIconDrawing':ab,'updateDrawing':ah,'removeDrawing':ag,'resetChanges':C,'toggleSettingsPopup':E,'togglePopover':G,'handleDrag':a9,'updateToolbarWidth':a6,'sendMagnetModeNotification':an,'sendDrawingModeNotification':ao,'sendDeleteDrawingsNotification':ap,'onFavorite':al,'onUnFavorite':am,'changeMode':u,'toggleDrawingVisibility':aj,'toggleDrawingLocked':ak}),b2);});const getIsDrawingsLimitReached=(c,d)=>{const e=c['getSelectedChartInfo'](),{drawings:f,instrument:g}=e,h=pipe(g,option['map'](i=>f[i]?f[i]['length']:0x0),option['getOrElse'](()=>0x0));return h>=d['drawings']['limitOfDrawings'];};export const editDrawingMode=c=>({'mode':'EditDrawing','drawing':c});export const isEditDrawingMode=c=>c['mode']==='EditDrawing';export const defaultMode={'mode':'Default'};export const isDefaultMode=c=>c['mode']==='Default';export function copyDrawing(c){const d=new DrawingModel(c['id'],c['htId'],c['type'],c['keyPoints'],c['properties'],c['visible'],c['locked'],c['synced'],c['getPane']);return d['hidden']=c['hidden'],d;}const toDrawingWithUpdatedKeypoints=(c,d)=>{if(!d['chartModel']['mainCandleSeries']['instrument']['symbol'])return none;const e=d['drawings']['getDrawings']()[d['chartModel']['mainCandleSeries']['instrument']['symbol']];return Array['isArray'](e)?pipe(e,array['findFirst'](f=>f['id']===c['id']),option['map'](f=>{const g=new DrawingModel(c['id'],c['htId'],c['type'],f['keyPoints'],c['properties'],c['visible']);return g['figure']['data']=c['figure']['data'],g['hidden']=c['hidden'],g;})):none;};